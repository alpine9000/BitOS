
;; Function max_reg_num (max_reg_num, funcdef_no=1, decl_uid=1474, cgraph_uid=1, symbol_order=3)



try_optimize_cfg iteration 1

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Reordered sequence:
 2 bb 2  [10000]
starting the processing of deferred insns
ending the processing of deferred insns


max_reg_num

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,2u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d} r14={1d,2u} r15={1d,2u} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r145={1d,1u} r146={1d} r151={1u} r153={1d,2u} 
;;    total ref usage 30{20d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 r0)
        (const_int 100 [0x64])) sms-10.c:40 255 {movsi_ie}
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 r0)) sms-10.c:40 -1
     (nil))

;; Function regstat_init_n_sets_and_refs (regstat_init_n_sets_and_refs, funcdef_no=2, decl_uid=1477, cgraph_uid=2, symbol_order=4)



try_optimize_cfg iteration 1

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)


regstat_init_n_sets_and_refs

Dataflow summary:
def_info->table_size = 128, use_info->table_size = 54
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={2d} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r14={1d,5u} r15={1d,6u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,4u} r146={2d} r147={4d,2u} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,5u} r154={1u} r189={1d,2u} r192={1d,2u} r198={2d,1u} r202={2d,1u} r203={2d,3u} r205={1d,2u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={2d,2u} r218={1d,1u} r219={1d,1u} r220={1d,1u} 
;;    total ref usage 173{125d,48u,0e} in 25{24 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(2){ }d5(3){ }d7(4){ }d9(5){ }d11(6){ }d13(7){ }d14(14){ }d15(15){ }d45(68){ }d47(69){ }d49(70){ }d51(71){ }d53(72){ }d55(73){ }d57(74){ }d59(75){ }d91(145){ }d93(146){ }d103(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 154 [fpscr0]
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 189 209
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 0 [r0] 147 [t] 189 209
;; live  kill	 146 [pr]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 189
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(14){ }u11(15){ }u12(145){ }u13(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 189
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189
;; lr  def 	 147 [t] 198 202 203 205 210 211 217 218 219 220
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189
;; live  gen 	 198 202 203 205 210 211 217 218 219 220
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 198 202 203 217
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 198 202 203 217

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(14){ }u28(15){ }u29(145){ }u30(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 198 202 203 217
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 198 202 203 217
;; lr  def 	 147 [t] 192 198 202 203 213 214 215 216 217
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 198 202 203 217
;; live  gen 	 192 198 202 203 213 214 215 216 217
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 198 202 203 217
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 198 202 203 217

( 2 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(14){ }u47(15){ }u48(145){ }u49(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u50(14){ }u51(15){ }u52(151){ }u53(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 37 to worklist
  Adding insn 33 to worklist
  Adding insn 250 to worklist
  Adding insn 60 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
processing block 5 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 198 202 203 217
  Adding insn 249 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 198 202 203 217
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 189
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)


SMS analysis phase
===================

SMS loop num: 1 sms-10.c:48
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [900]
 3 bb 3  [819]
 4 bb 4  [9100]
 5 bb 5  [900]
starting the processing of deferred insns
ending the processing of deferred insns


regstat_init_n_sets_and_refs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={2d} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r14={1d,5u} r15={1d,6u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,4u} r146={2d} r147={4d,2u} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,5u} r154={1u} r189={1d,2u} r192={1d,2u} r198={2d,1u} r202={2d,1u} r203={2d,3u} r205={1d,2u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={2d,2u} r218={1d,1u} r219={1d,1u} r220={1d,1u} 
;;    total ref usage 173{125d,48u,0e} in 25{24 regular + 1 call} insns.
(note 28 0 30 NOTE_INSN_DELETED)
(note 30 28 29 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 29 30 32 2 NOTE_INSN_FUNCTION_BEG)
(insn 32 29 33 2 (set (reg/f:SI 209)
        (symbol_ref:SI ("max_reg_num") [flags 0x3]  <function_decl 0x1426e9af8 max_reg_num>)) sms-10.c:46 255 {movsi_ie}
     (nil))
(call_insn/u 33 32 34 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 209) [0 max_reg_num S4 A32])
                    (const_int 0 [0])))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-10.c:46 321 {call_valuei}
     (expr_list:REG_DEAD (reg/f:SI 209)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("max_reg_num") [flags 0x3]  <function_decl 0x1426e9af8 max_reg_num>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(insn 34 33 36 2 (set (reg:SI 189 [ D.1574 ])
        (reg:SI 0 r0)) sms-10.c:46 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 36 34 37 2 (set (reg:SI 147 t)
        (eq:SI (reg:SI 189 [ D.1574 ])
            (const_int 0 [0]))) sms-10.c:48 12 {cmpeqsi_t}
     (nil))
(jump_insn 37 36 42 2 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 71)
            (pc))) sms-10.c:48 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 71)
(note 42 37 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg/f:SI 210)
        (symbol_ref:SI ("regstat_n_sets_and_refs")  <var_decl 0x14260b630 regstat_n_sets_and_refs>)) 255 {movsi_ie}
     (nil))
(note 44 43 45 3 NOTE_INSN_DELETED)
(insn 45 44 46 3 (set (reg/f:SI 211)
        (symbol_ref:SI ("df")  <var_decl 0x14260b6c0 df>)) 255 {movsi_ie}
     (nil))
(insn 46 45 47 3 (set (reg/f:SI 205 [ D.1578 ])
        (mem/f/c:SI (reg/f:SI 211) [1 df+0 S4 A32])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 211)
        (expr_list:REG_EQUAL (mem/f/c:SI (symbol_ref:SI ("df")  <var_decl 0x14260b6c0 df>) [1 df+0 S4 A32])
            (nil))))
(insn 47 46 48 3 (set (reg:SI 198 [ ivtmp.16 ])
        (mem/f:SI (reg/f:SI 205 [ D.1578 ]) [1 _45->def_regs+0 S4 A32])) 255 {movsi_ie}
     (nil))
(insn 48 47 49 3 (set (reg:SI 203 [ ivtmp.18 ])
        (mem/f/c:SI (reg/f:SI 210) [1 regstat_n_sets_and_refs+0 S4 A32])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 210)
        (nil)))
(insn 49 48 50 3 (set (reg:SI 202 [ ivtmp.20 ])
        (mem/f:SI (plus:SI (reg/f:SI 205 [ D.1578 ])
                (const_int 4 [0x4])) [1 _45->use_regs+0 S4 A32])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 205 [ D.1578 ])
        (nil)))
(note 50 49 51 3 NOTE_INSN_DELETED)
(note 51 50 114 3 NOTE_INSN_DELETED)
(insn 114 51 115 3 (set (reg:SI 218)
        (ashift:SI (reg:SI 189 [ D.1574 ])
            (const_int 3 [0x3]))) 162 {ashlsi3_n}
     (expr_list:REG_DEAD (reg:SI 189 [ D.1574 ])
        (nil)))
(insn 115 114 116 3 (set (reg:SI 219)
        (plus:SI (reg:SI 218)
            (const_int -8 [0xfffffffffffffff8]))) -1
     (expr_list:REG_DEAD (reg:SI 218)
        (nil)))
(insn 116 115 117 3 (parallel [
            (set (reg:SI 220)
                (lshiftrt:SI (reg:SI 219)
                    (const_int 3 [0x3])))
            (clobber (reg:SI 147 t))
        ]) -1
     (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_UNUSED (reg:SI 147 t)
            (nil))))
(insn 117 116 64 3 (set (reg:SI 217)
        (plus:SI (reg:SI 220)
            (const_int 1 [0x1]))) -1
     (expr_list:REG_DEAD (reg:SI 220)
        (nil)))
(code_label 64 117 52 4 4 "" [1 uses])
(note 52 64 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 4 (set (reg/f:SI 213 [ MEM[base: _32, offset: 0B] ])
        (mem/f:SI (post_inc:SI (reg:SI 198 [ ivtmp.16 ])) [1 MEM[base: _32, offset: 0B]+0 S4 A32])) sms-10.c:50 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 198 [ ivtmp.16 ])
        (nil)))
(insn 54 53 56 4 (set (reg:SI 192 [ D.1576 ])
        (mem:SI (reg/f:SI 213 [ MEM[base: _32, offset: 0B] ]) [3 _13->n_refs+0 S4 A32])) sms-10.c:50 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 213 [ MEM[base: _32, offset: 0B] ])
        (nil)))
(insn 56 54 57 4 (set (mem:SI (reg:SI 203 [ ivtmp.18 ]) [3 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 192 [ D.1576 ])) sms-10.c:50 255 {movsi_ie}
     (nil))
(insn 57 56 58 4 (set (reg/f:SI 214 [ MEM[base: _30, offset: 0B] ])
        (mem/f:SI (post_inc:SI (reg:SI 202 [ ivtmp.20 ])) [1 MEM[base: _30, offset: 0B]+0 S4 A32])) sms-10.c:52 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 202 [ ivtmp.20 ])
        (nil)))
(insn 58 57 59 4 (set (reg:SI 216 [ _19->n_refs ])
        (mem:SI (reg/f:SI 214 [ MEM[base: _30, offset: 0B] ]) [3 _19->n_refs+0 S4 A32])) sms-10.c:51 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 214 [ MEM[base: _30, offset: 0B] ])
        (nil)))
(insn 59 58 60 4 (set (reg:SI 215 [ D.1576 ])
        (plus:SI (reg:SI 216 [ _19->n_refs ])
            (reg:SI 192 [ D.1576 ]))) sms-10.c:51 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 216 [ _19->n_refs ])
        (expr_list:REG_DEAD (reg:SI 192 [ D.1576 ])
            (nil))))
(insn 60 59 62 4 (set (mem:SI (plus:SI (reg:SI 203 [ ivtmp.18 ])
                (const_int 4 [0x4])) [3 MEM[base: _31, offset: 4B]+0 S4 A32])
        (reg:SI 215 [ D.1576 ])) sms-10.c:51 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 215 [ D.1576 ])
        (nil)))
(insn 62 60 249 4 (set (reg:SI 203 [ ivtmp.18 ])
        (plus:SI (reg:SI 203 [ ivtmp.18 ])
            (const_int 8 [0x8]))) 66 {*addsi3}
     (nil))
(insn 249 62 250 4 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 217)
                    (const_int 1 [0x1])))
            (set (reg:SI 217)
                (plus:SI (reg:SI 217)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-10.c:48 -1
     (nil))
(jump_insn 250 249 71 4 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) sms-10.c:48 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 64)
(code_label 71 250 72 5 2 "" [1 uses])
(note 72 71 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

;; Function main (main, funcdef_no=3, decl_uid=1486, cgraph_uid=3, symbol_order=7) (executed once)



try_optimize_cfg iteration 1

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 3
;;  header 10, latch 10
;;  depth 1, outer 0
;;  nodes: 10
;;
;; Loop 2
;;  header 5, latch 8
;;  depth 1, outer 0
;;  nodes: 5 8 6
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 5 9 }
;; 9 succs { 10 }
;; 10 succs { 10 11 }
;; 11 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 14 (  1.2)


main

Dataflow summary:
def_info->table_size = 552, use_info->table_size = 122
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={7d,4u} r1={6d} r2={7d} r3={7d} r4={11d,4u} r5={7d} r6={7d} r7={7d} r14={1d,11u} r15={1d,17u} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r128={6d} r129={6d} r130={6d} r131={6d} r132={6d} r136={6d} r137={6d} r138={6d} r139={6d} r140={6d} r141={6d} r145={1d,10u} r146={7d} r147={11d,5u} r148={6d} r149={6d} r150={6d} r151={6d,1u} r152={6d} r153={1d,15u,1e} r154={6u} r162={2d,3u} r163={2d,2u} r164={2d,2u} r168={2d,4u} r175={2d,4u,1e} r176={2d,3u} r182={1d,1u} r184={1d,1u} r187={1d,2u} r190={1d,2u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r212={1d,3u} r213={1d,2u} r214={1d,2u} r215={1d,2u} r216={1d,3u} r217={1d,3u} r218={1d,1u} r219={2d,2u} 
;;    total ref usage 675{552d,121u,2e} in 60{54 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d19(2){ }d26(3){ }d37(4){ }d44(5){ }d51(6){ }d58(7){ }d59(14){ }d60(15){ }d235(68){ }d242(69){ }d249(70){ }d256(71){ }d263(72){ }d270(73){ }d277(74){ }d284(75){ }d471(145){ }d478(146){ }d520(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 154 [fpscr0]
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 162 168 182 184 212 213 214 216 217
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 162 168 182 184 212 213 214 216 217
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 162 168 212 213 214 216 217
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 168 212 213 214 216 217

( 3 2 )->[3]->( 3 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(14){ }u13(15){ }u14(145){ }u15(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 162 168 212 213 214 216 217
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 162 168 212 213 216
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 162 168 187 190
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 168 212 213 214 216 217
;; live  gen 	 0 [r0] 4 [r4] 147 [t] 162 168 187 190
;; live  kill	 146 [pr]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 162 168 212 213 214 216 217
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 168 212 213 214 216 217

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(14){ }u41(15){ }u42(145){ }u43(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 212 214 216 217
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 212 214 216 217
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 163 164 176 199 219
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 212 214 216 217
;; live  gen 	 163 164 176 199 219
;; live  kill	 146 [pr]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 212 216 219

( 8 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u53(14){ }u54(15){ }u55(145){ }u56(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 176
;; lr  def 	 147 [t] 201 202
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 212 216 219
;; live  gen 	 147 [t] 201 202
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 212 216 219

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u62(14){ }u63(15){ }u64(145){ }u65(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 164 176
;; lr  def 	 147 [t] 203 204
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 212 216 219
;; live  gen 	 147 [t] 203 204
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 212 216 219

( 6 5 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u71(14){ }u72(15){ }u73(145){ }u74(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 205
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 205
;; live  kill	 146 [pr]
;; lr  out 	 15 [r15] 145 [ap] 153 [sfp]
;; live  out 	 15 [r15] 145 [ap] 153 [sfp]

( 6 )->[8]->( 5 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(14){ }u79(15){ }u80(145){ }u81(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 219
;; lr  def 	 147 [t] 163 164 176 219
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 212 216 219
;; live  gen 	 163 164 176 219
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 164 176 212 216 219

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u87(14){ }u88(15){ }u89(145){ }u90(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 212 216
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 175 215 218
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 212 216
;; live  gen 	 175 215 218
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 175 212 215 216 218
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 175 212 215 216 218

( 9 10 )->[10]->( 10 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u91(14){ }u92(15){ }u93(145){ }u94(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 175 212 215 216 218
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 175 212 215 216 218
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 175
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 175 212 215 216 218
;; live  gen 	 4 [r4] 147 [t] 175
;; live  kill	 146 [pr]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 175 212 215 216 218
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 175 212 215 216 218

( 10 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u112(14){ }u113(15){ }u114(145){ }u115(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 0 [r0]
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 0 [r0] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u117(0){ }u118(14){ }u119(15){ }u120(151){ }u121(153){ }}
;; lr  in  	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 37 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 17 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 42 to worklist
  Adding insn 59 to worklist
  Adding insn 64 to worklist
  Adding insn 68 to worklist
  Adding insn 272 to worklist
  Adding insn 92 to worklist
  Adding insn 87 to worklist
  Adding insn 83 to worklist
  Adding insn 99 to worklist
Finished finding needed instructions:
processing block 7 lr out =  15 [r15] 145 [ap] 153 [sfp]
  Adding insn 67 to worklist
processing block 11 lr out =  0 [r0] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
  Adding insn 98 to worklist
processing block 10 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 175 212 215 216 218
  Adding insn 91 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 82 to worklist
processing block 9 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 175 212 215 216 218
  Adding insn 90 to worklist
  Adding insn 192 to worklist
  Adding insn 5 to worklist
processing block 8 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
  Adding insn 271 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 6 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 5 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 164 176 212 216 219
  Adding insn 231 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 182 to worklist
  Adding insn 47 to worklist
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 162 168 212 213 214 216 217
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 162 168 212 213 214 216 217
  Adding insn 190 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 15 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 17 (  1.4)


SMS analysis phase
===================

SMS loop num: 3 sms-10.c:108
SMS doloop_register_get failed
SMS loop num: 2 sms-10.c:105
SMS loop many exits sms-10.c:105
SMS loop num: 1 sms-10.c:92
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [100]
 3 bb 3  [9900]
 4 bb 4  [100]
 5 bb 5  [9174]
 6 bb 6  [9170]
 7 bb 7  [7]
 8 bb 8  [9166]
 9 bb 9  [93]
 10 bb 10  [9174]
 11 bb 11  [93]
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={7d,4u} r1={6d} r2={7d} r3={7d} r4={11d,4u} r5={7d} r6={7d} r7={7d} r14={1d,11u} r15={1d,17u} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r128={6d} r129={6d} r130={6d} r131={6d} r132={6d} r136={6d} r137={6d} r138={6d} r139={6d} r140={6d} r141={6d} r145={1d,10u} r146={7d} r147={11d,5u} r148={6d} r149={6d} r150={6d} r151={6d,1u} r152={6d} r153={1d,15u,1e} r154={6u} r162={2d,3u} r163={2d,2u} r164={2d,2u} r168={2d,4u} r175={2d,4u,1e} r176={2d,3u} r182={1d,1u} r184={1d,1u} r187={1d,2u} r190={1d,2u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r212={1d,3u} r213={1d,2u} r214={1d,2u} r215={1d,2u} r216={1d,3u} r217={1d,3u} r218={1d,1u} r219={2d,2u} 
;;    total ref usage 675{552d,121u,2e} in 60{54 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 2 9 2 (set (reg/f:SI 182)
        (symbol_ref:SI ("df")  <var_decl 0x14260b6c0 df>)) sms-10.c:88 255 {movsi_ie}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 217)
                (plus:SI (reg/f:SI 153 sfp)
                    (const_int -1608 [0xfffffffffffff9b8])))
            (clobber (scratch:SI))
        ]) sms-10.c:88 64 {addsi3_scr}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:SI (reg/f:SI 182) [1 df+0 S4 A32])
        (reg/f:SI 217)) sms-10.c:88 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 182)
        (nil)))
(insn 11 10 12 2 (set (reg/f:SI 184)
        (symbol_ref:SI ("regstat_n_sets_and_refs")  <var_decl 0x14260b630 regstat_n_sets_and_refs>)) sms-10.c:89 255 {movsi_ie}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:SI 214 [ ivtmp.38 ])
                (plus:SI (reg/f:SI 153 sfp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (scratch:SI))
        ]) sms-10.c:89 64 {addsi3_scr}
     (nil))
(insn 13 12 3 2 (set (mem/f/c:SI (reg/f:SI 184) [1 regstat_n_sets_and_refs+0 S4 A32])
        (reg/f:SI 214 [ ivtmp.38 ])) sms-10.c:89 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 184)
        (nil)))
(insn 3 13 4 2 (set (reg:SI 162 [ ivtmp.50 ])
        (const_int 0 [0])) sms-10.c:89 255 {movsi_ie}
     (nil))
(insn 4 3 187 2 (set (reg/v:SI 168 [ i ])
        (const_int 0 [0])) sms-10.c:92 255 {movsi_ie}
     (nil))
(insn 187 4 188 2 (set (reg/f:SI 213)
        (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x1426ac1b0 malloc>)) -1
     (nil))
(insn 188 187 190 2 (parallel [
            (set (reg/f:SI 212)
                (plus:SI (reg/f:SI 153 sfp)
                    (const_int -1600 [0xfffffffffffff9c0])))
            (clobber (scratch:SI))
        ]) 64 {addsi3_scr}
     (nil))
(insn 190 188 34 2 (parallel [
            (set (reg/f:SI 216)
                (plus:SI (reg/f:SI 153 sfp)
                    (const_int -1200 [0xfffffffffffffb50])))
            (clobber (scratch:SI))
        ]) 64 {addsi3_scr}
     (nil))
(code_label 34 190 14 3 14 "" [1 uses])
(note 14 34 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 14 17 3 (set (reg:SI 4 r4)
        (const_int 4 [0x4])) sms-10.c:94 255 {movsi_ie}
     (nil))
(call_insn 17 16 18 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 213) [0 __builtin_malloc S4 A32])
                    (const_int 0 [0])))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-10.c:94 321 {call_valuei}
     (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x1426ac1b0 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 4 r4))
        (nil)))
(insn 18 17 21 3 (set (reg/f:SI 187)
        (reg:SI 0 r0)) sms-10.c:94 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NOALIAS (reg/f:SI 187)
            (nil))))
(insn 21 18 23 3 (set (mem/f:SI (plus:SI (reg/f:SI 212)
                (reg:SI 162 [ ivtmp.50 ])) [1 MEM[symbol: b, index: ivtmp.50_2, offset: 0B]+0 S4 A32])
        (reg/f:SI 187)) sms-10.c:94 255 {movsi_ie}
     (nil))
(insn 23 21 25 3 (set (mem:SI (reg/f:SI 187) [3 MEM[(struct df_reg_info *)_10].n_refs+0 S4 A32])
        (reg/v:SI 168 [ i ])) sms-10.c:95 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 187)
        (nil)))
(insn 25 23 26 3 (set (reg:SI 4 r4)
        (const_int 4 [0x4])) sms-10.c:96 255 {movsi_ie}
     (nil))
(call_insn 26 25 27 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 213) [0 __builtin_malloc S4 A32])
                    (const_int 0 [0])))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-10.c:96 321 {call_valuei}
     (expr_list:REG_DEAD (reg:SI 154 fpscr0)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x1426ac1b0 malloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 4 r4))
        (nil)))
(insn 27 26 30 3 (set (reg/f:SI 190)
        (reg:SI 0 r0)) sms-10.c:96 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NOALIAS (reg/f:SI 190)
            (nil))))
(insn 30 27 31 3 (set (mem/f:SI (plus:SI (reg/f:SI 216)
                (reg:SI 162 [ ivtmp.50 ])) [1 MEM[symbol: c, index: ivtmp.50_2, offset: 0B]+0 S4 A32])
        (reg/f:SI 190)) sms-10.c:96 255 {movsi_ie}
     (nil))
(insn 31 30 32 3 (set (mem:SI (reg/f:SI 190) [3 MEM[(struct df_reg_info *)_16].n_refs+0 S4 A32])
        (reg/v:SI 168 [ i ])) sms-10.c:97 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 190)
        (nil)))
(insn 32 31 33 3 (set (reg/v:SI 168 [ i ])
        (plus:SI (reg/v:SI 168 [ i ])
            (const_int 1 [0x1]))) sms-10.c:92 66 {*addsi3}
     (nil))
(insn 33 32 36 3 (set (reg:SI 162 [ ivtmp.50 ])
        (plus:SI (reg:SI 162 [ ivtmp.50 ])
            (const_int 4 [0x4]))) 66 {*addsi3}
     (nil))
(insn 36 33 37 3 (set (reg:SI 147 t)
        (eq:SI (reg/v:SI 168 [ i ])
            (const_int 100 [0x64]))) sms-10.c:92 12 {cmpeqsi_t}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 34)
            (pc))) sms-10.c:92 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 34)
(note 38 37 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 38 46 4 (set (mem/f/c:SI (reg/f:SI 217) [1 df1.def_regs+0 S4 A32])
        (reg/f:SI 212)) sms-10.c:100 255 {movsi_ie}
     (nil))
(insn 46 42 47 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 217)
                (const_int 4 [0x4])) [1 df1.use_regs+0 S4 A32])
        (reg/f:SI 216)) sms-10.c:101 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 217)
        (nil)))
(insn 47 46 48 4 (set (reg/f:SI 199)
        (symbol_ref:SI ("regstat_init_n_sets_and_refs") [flags 0x3]  <function_decl 0x1426e9bd0 regstat_init_n_sets_and_refs>)) sms-10.c:102 255 {movsi_ie}
     (nil))
(call_insn 48 47 182 4 (parallel [
            (call (mem:SI (reg/f:SI 199) [0 regstat_init_n_sets_and_refs S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-10.c:102 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("regstat_init_n_sets_and_refs") [flags 0x3]  <function_decl 0x1426e9bd0 regstat_init_n_sets_and_refs>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(insn 182 48 50 4 (set (reg:SI 176 [ ivtmp.38 ])
        (reg/f:SI 214 [ ivtmp.38 ])) -1
     (expr_list:REG_DEAD (reg/f:SI 214 [ ivtmp.38 ])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 153 sfp)
                (const_int -800 [0xfffffffffffffce0]))
            (nil))))
(insn 50 182 51 4 (set (reg:SI 163 [ ivtmp.40 ])
        (symbol_ref:SI ("a_sets") [flags 0x2]  <var_decl 0x14260b870 a_sets>)) 255 {movsi_ie}
     (nil))
(insn 51 50 231 4 (set (reg:SI 164 [ ivtmp.43 ])
        (symbol_ref:SI ("a_refs") [flags 0x2]  <var_decl 0x14260b990 a_refs>)) 255 {movsi_ie}
     (nil))
(insn 231 51 75 4 (set (reg:SI 219)
        (const_int 100 [0x64])) -1
     (nil))
(code_label 75 231 54 5 17 "" [1 uses])
(note 54 75 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 57 5 (set (reg:SI 201 [ MEM[base: _50, offset: 0B] ])
        (mem:SI (reg:SI 176 [ ivtmp.38 ]) [3 MEM[base: _50, offset: 0B]+0 S4 A32])) sms-10.c:105 255 {movsi_ie}
     (nil))
(insn 57 56 58 5 (set (reg:SI 202 [ MEM[base: _51, offset: 0B] ])
        (mem:SI (reg:SI 163 [ ivtmp.40 ]) [3 MEM[base: _51, offset: 0B]+0 S4 A32])) sms-10.c:105 255 {movsi_ie}
     (nil))
(insn 58 57 59 5 (set (reg:SI 147 t)
        (eq:SI (reg:SI 201 [ MEM[base: _50, offset: 0B] ])
            (reg:SI 202 [ MEM[base: _51, offset: 0B] ]))) sms-10.c:105 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 202 [ MEM[base: _51, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 201 [ MEM[base: _50, offset: 0B] ])
            (nil))))
(jump_insn 59 58 60 5 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) sms-10.c:105 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 65)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 6 (set (reg:SI 203 [ MEM[base: _50, offset: 4B] ])
        (mem:SI (plus:SI (reg:SI 176 [ ivtmp.38 ])
                (const_int 4 [0x4])) [3 MEM[base: _50, offset: 4B]+0 S4 A32])) sms-10.c:105 255 {movsi_ie}
     (nil))
(insn 62 61 63 6 (set (reg:SI 204 [ MEM[base: _55, offset: 0B] ])
        (mem:SI (reg:SI 164 [ ivtmp.43 ]) [3 MEM[base: _55, offset: 0B]+0 S4 A32])) sms-10.c:105 255 {movsi_ie}
     (nil))
(insn 63 62 64 6 (set (reg:SI 147 t)
        (eq:SI (reg:SI 203 [ MEM[base: _50, offset: 4B] ])
            (reg:SI 204 [ MEM[base: _55, offset: 0B] ]))) sms-10.c:105 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 204 [ MEM[base: _55, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 203 [ MEM[base: _50, offset: 4B] ])
            (nil))))
(jump_insn 64 63 65 6 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) sms-10.c:105 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 70)
(code_label 65 64 66 7 15 "" [1 uses])
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (set (reg/f:SI 205)
        (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)) sms-10.c:106 255 {movsi_ie}
     (nil))
(call_insn 68 67 69 7 (parallel [
            (call (mem:SI (reg/f:SI 205) [0 __builtin_abort S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-10.c:106 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 205)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (nil))
(barrier 69 68 70)
(code_label 70 69 71 8 16 "" [1 uses])
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (reg:SI 176 [ ivtmp.38 ])
        (plus:SI (reg:SI 176 [ ivtmp.38 ])
            (const_int 8 [0x8]))) 66 {*addsi3}
     (nil))
(insn 73 72 74 8 (set (reg:SI 163 [ ivtmp.40 ])
        (plus:SI (reg:SI 163 [ ivtmp.40 ])
            (const_int 4 [0x4]))) 66 {*addsi3}
     (nil))
(insn 74 73 271 8 (set (reg:SI 164 [ ivtmp.43 ])
        (plus:SI (reg:SI 164 [ ivtmp.43 ])
            (const_int 4 [0x4]))) 66 {*addsi3}
     (nil))
(insn 271 74 272 8 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 219)
                    (const_int 1 [0x1])))
            (set (reg:SI 219)
                (plus:SI (reg:SI 219)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-10.c:104 -1
     (nil))
(jump_insn 272 271 78 8 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) sms-10.c:104 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 75)
(note 78 272 5 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 5 78 192 9 (set (reg:SI 175 [ ivtmp.31 ])
        (const_int 0 [0])) 255 {movsi_ie}
     (nil))
(insn 192 5 90 9 (set (reg/f:SI 215)
        (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x1426a2ca8 free>)) -1
     (nil))
(insn 90 192 89 9 (set (reg:SI 218)
        (const_int 400 [0x190])) sms-10.c:108 255 {movsi_ie}
     (nil))
(code_label 89 90 79 10 18 "" [1 uses])
(note 79 89 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 79 83 10 (set (reg:SI 4 r4)
        (mem/f:SI (plus:SI (reg/f:SI 212)
                (reg:SI 175 [ ivtmp.31 ])) [1 MEM[symbol: b, index: ivtmp.31_43, offset: 0B]+0 S4 A32])) sms-10.c:110 255 {movsi_ie}
     (nil))
(call_insn 83 82 86 10 (parallel [
            (call (mem:SI (reg/f:SI 215) [0 __builtin_free S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-10.c:110 314 {calli}
     (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x1426a2ca8 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 4 r4))
        (nil)))
(insn 86 83 87 10 (set (reg:SI 4 r4)
        (mem/f:SI (plus:SI (reg/f:SI 216)
                (reg:SI 175 [ ivtmp.31 ])) [1 MEM[symbol: c, index: ivtmp.31_43, offset: 0B]+0 S4 A32])) sms-10.c:111 255 {movsi_ie}
     (nil))
(call_insn 87 86 88 10 (parallel [
            (call (mem:SI (reg/f:SI 215) [0 __builtin_free S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-10.c:111 314 {calli}
     (expr_list:REG_DEAD (reg:SI 154 fpscr0)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x1426a2ca8 free>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 4 r4))
        (nil)))
(insn 88 87 91 10 (set (reg:SI 175 [ ivtmp.31 ])
        (plus:SI (reg:SI 175 [ ivtmp.31 ])
            (const_int 4 [0x4]))) 66 {*addsi3}
     (nil))
(insn 91 88 92 10 (set (reg:SI 147 t)
        (eq:SI (reg:SI 175 [ ivtmp.31 ])
            (reg:SI 218))) sms-10.c:108 12 {cmpeqsi_t}
     (expr_list:REG_EQUAL (eq:SI (reg:SI 175 [ ivtmp.31 ])
            (const_int 400 [0x190]))
        (nil)))
(jump_insn 92 91 93 10 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 89)
            (pc))) sms-10.c:108 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 89)
(note 93 92 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 98 93 99 11 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) sms-10.c:115 255 {movsi_ie}
     (nil))
(insn 99 98 0 11 (use (reg/i:SI 0 r0)) sms-10.c:115 -1
     (nil))
