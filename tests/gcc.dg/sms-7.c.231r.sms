
;; Function foo (foo, funcdef_no=0, decl_uid=1458, cgraph_uid=0, symbol_order=0)



try_optimize_cfg iteration 1

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


foo

Dataflow summary:
def_info->table_size = 43, use_info->table_size = 51
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 4[r4] 5[r5] 6[r6] 147[t] 149[macl]
;;  ref usage 	r2={1d} r3={1d} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={1d} r14={1d,4u} r15={1d,4u} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r145={1d,3u} r146={1d} r147={1d,1u} r149={4d,4u} r151={1u} r153={1d,4u} r233={2d,5u} r234={2d,5u} r235={2d,5u} r239={1d,1u} r241={1d,1u} r242={1d,1u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r248={1d,1u} r250={1d,1u} r251={2d,2u} 
;;    total ref usage 89{40d,49u,0e} in 25{25 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(2){ }d1(3){ }d2(4){ }d3(5){ }d4(6){ }d5(7){ }d6(14){ }d7(15){ }d8(68){ }d9(69){ }d10(70){ }d11(71){ }d12(72){ }d13(73){ }d14(74){ }d15(75){ }d16(145){ }d17(146){ }d23(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 151 []
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 233 234 235 251
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 233 234 235 251
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 233 234 235 251
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 233 234 235 251

( 3 2 )->[3]->( 3 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(14){ }u11(15){ }u12(145){ }u13(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 233 234 235 251
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 233 234 235 251
;; lr  def 	 147 [t] 149 [macl] 233 234 235 239 241 242 244 245 247 248 250 251
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 233 234 235 251
;; live  gen 	 149 [macl] 233 234 235 239 241 242 244 245 247 248 250 251
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 233 234 235 251
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 233 234 235 251

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u43(14){ }u44(15){ }u45(145){ }u46(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u47(14){ }u48(15){ }u49(151){ }u50(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 148 to worklist
  Adding insn 89 to worklist
  Adding insn 84 to worklist
  Adding insn 79 to worklist
  Adding insn 74 to worklist
Finished finding needed instructions:
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 233 234 235 251
  Adding insn 147 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 233 234 235 251
  Adding insn 128 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


SMS analysis phase
===================

SMS loop num: 1 sms-7.c:10
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [385]
 3 bb 3  [9615]
 4 compensation  [385]
starting the processing of deferred insns
ending the processing of deferred insns


foo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 4[r4] 5[r5] 6[r6] 147[t] 149[macl]
;;  ref usage 	r2={1d} r3={1d} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={1d} r14={1d,4u} r15={1d,4u} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r145={1d,3u} r146={1d} r147={1d,1u} r149={4d,4u} r151={1u} r153={1d,4u} r233={2d,5u} r234={2d,5u} r235={2d,5u} r239={1d,1u} r241={1d,1u} r242={1d,1u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r248={1d,1u} r250={1d,1u} r251={2d,2u} 
;;    total ref usage 89{40d,49u,0e} in 25{25 regular + 0 call} insns.
(note 55 0 60 NOTE_INSN_DELETED)
(note 60 55 56 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 56 60 57 2 NOTE_INSN_DELETED)
(note 57 56 58 2 NOTE_INSN_DELETED)
(note 58 57 59 2 NOTE_INSN_DELETED)
(note 59 58 62 2 NOTE_INSN_FUNCTION_BEG)
(insn 62 59 63 2 (set (reg:SI 235 [ ivtmp.12 ])
        (reg:SI 5 r5 [ b ])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 5 r5 [ b ])
        (nil)))
(insn 63 62 64 2 (set (reg:SI 234 [ ivtmp.14 ])
        (reg:SI 6 r6 [ c ])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 6 r6 [ c ])
        (nil)))
(insn 64 63 128 2 (set (reg:SI 233 [ ivtmp.16 ])
        (reg:SI 4 r4 [ a ])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 4 r4 [ a ])
        (nil)))
(insn 128 64 93 2 (set (reg:SI 251)
        (const_int 25 [0x19])) -1
     (nil))
(code_label 93 128 66 3 2 "" [1 uses])
(note 66 93 70 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 70 66 71 3 (set (reg:SI 239 [ D.1560 ])
        (sign_extend:SI (mem:HI (reg:SI 234 [ ivtmp.14 ]) [2 MEM[base: _136, offset: 0B]+0 S2 A16]))) sms-7.c:12 239 {*extendhisi2_compact_snd}
     (nil))
(insn 71 70 72 3 (set (reg:SI 241 [ MEM[base: _137, offset: 0B] ])
        (mem:SI (reg:SI 235 [ ivtmp.12 ]) [1 MEM[base: _137, offset: 0B]+0 S4 A32])) sms-7.c:12 255 {movsi_ie}
     (nil))
(insn 72 71 74 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 241 [ MEM[base: _137, offset: 0B] ])
            (reg:SI 239 [ D.1560 ]))) sms-7.c:12 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 241 [ MEM[base: _137, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 239 [ D.1560 ])
            (nil))))
(insn 74 72 75 3 (set (mem:SI (reg:SI 233 [ ivtmp.16 ]) [1 MEM[base: _135, offset: 0B]+0 S4 A32])
        (reg:SI 149 macl)) sms-7.c:12 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 75 74 76 3 (set (reg:SI 242 [ D.1560 ])
        (sign_extend:SI (mem:HI (plus:SI (reg:SI 234 [ ivtmp.14 ])
                    (const_int 2 [0x2])) [2 MEM[base: _136, offset: 2B]+0 S2 A16]))) sms-7.c:13 235 {*extendhisi2_compact_mem_disp}
     (nil))
(insn 76 75 77 3 (set (reg:SI 244 [ MEM[base: _137, offset: 4B] ])
        (mem:SI (plus:SI (reg:SI 235 [ ivtmp.12 ])
                (const_int 4 [0x4])) [1 MEM[base: _137, offset: 4B]+0 S4 A32])) sms-7.c:13 255 {movsi_ie}
     (nil))
(insn 77 76 79 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 244 [ MEM[base: _137, offset: 4B] ])
            (reg:SI 242 [ D.1560 ]))) sms-7.c:13 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 244 [ MEM[base: _137, offset: 4B] ])
        (expr_list:REG_DEAD (reg:SI 242 [ D.1560 ])
            (nil))))
(insn 79 77 80 3 (set (mem:SI (plus:SI (reg:SI 233 [ ivtmp.16 ])
                (const_int 4 [0x4])) [1 MEM[base: _135, offset: 4B]+0 S4 A32])
        (reg:SI 149 macl)) sms-7.c:13 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 80 79 81 3 (set (reg:SI 245 [ D.1560 ])
        (sign_extend:SI (mem:HI (plus:SI (reg:SI 234 [ ivtmp.14 ])
                    (const_int 4 [0x4])) [2 MEM[base: _136, offset: 4B]+0 S2 A16]))) sms-7.c:14 235 {*extendhisi2_compact_mem_disp}
     (nil))
(insn 81 80 82 3 (set (reg:SI 247 [ MEM[base: _137, offset: 8B] ])
        (mem:SI (plus:SI (reg:SI 235 [ ivtmp.12 ])
                (const_int 8 [0x8])) [1 MEM[base: _137, offset: 8B]+0 S4 A32])) sms-7.c:14 255 {movsi_ie}
     (nil))
(insn 82 81 84 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 247 [ MEM[base: _137, offset: 8B] ])
            (reg:SI 245 [ D.1560 ]))) sms-7.c:14 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 247 [ MEM[base: _137, offset: 8B] ])
        (expr_list:REG_DEAD (reg:SI 245 [ D.1560 ])
            (nil))))
(insn 84 82 85 3 (set (mem:SI (plus:SI (reg:SI 233 [ ivtmp.16 ])
                (const_int 8 [0x8])) [1 MEM[base: _135, offset: 8B]+0 S4 A32])
        (reg:SI 149 macl)) sms-7.c:14 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 85 84 86 3 (set (reg:SI 248 [ D.1560 ])
        (sign_extend:SI (mem:HI (plus:SI (reg:SI 234 [ ivtmp.14 ])
                    (const_int 6 [0x6])) [2 MEM[base: _136, offset: 6B]+0 S2 A16]))) sms-7.c:15 235 {*extendhisi2_compact_mem_disp}
     (nil))
(insn 86 85 87 3 (set (reg:SI 250 [ MEM[base: _137, offset: 12B] ])
        (mem:SI (plus:SI (reg:SI 235 [ ivtmp.12 ])
                (const_int 12 [0xc])) [1 MEM[base: _137, offset: 12B]+0 S4 A32])) sms-7.c:15 255 {movsi_ie}
     (nil))
(insn 87 86 89 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 250 [ MEM[base: _137, offset: 12B] ])
            (reg:SI 248 [ D.1560 ]))) sms-7.c:15 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 250 [ MEM[base: _137, offset: 12B] ])
        (expr_list:REG_DEAD (reg:SI 248 [ D.1560 ])
            (nil))))
(insn 89 87 90 3 (set (mem:SI (plus:SI (reg:SI 233 [ ivtmp.16 ])
                (const_int 12 [0xc])) [1 MEM[base: _135, offset: 12B]+0 S4 A32])
        (reg:SI 149 macl)) sms-7.c:15 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 90 89 91 3 (set (reg:SI 235 [ ivtmp.12 ])
        (plus:SI (reg:SI 235 [ ivtmp.12 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 91 90 92 3 (set (reg:SI 234 [ ivtmp.14 ])
        (plus:SI (reg:SI 234 [ ivtmp.14 ])
            (const_int 8 [0x8]))) 66 {*addsi3}
     (nil))
(insn 92 91 147 3 (set (reg:SI 233 [ ivtmp.16 ])
        (plus:SI (reg:SI 233 [ ivtmp.16 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 147 92 148 3 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 251)
                    (const_int 1 [0x1])))
            (set (reg:SI 251)
                (plus:SI (reg:SI 251)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-7.c:10 -1
     (nil))
(jump_insn 148 147 96 3 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) sms-7.c:10 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9600 (nil)))
 -> 93)
(note 96 148 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

;; Function main (main, funcdef_no=1, decl_uid=1467, cgraph_uid=1, symbol_order=4) (executed once)



try_optimize_cfg iteration 1

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 2
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 11 (  1.2)


main

Dataflow summary:
def_info->table_size = 208, use_info->table_size = 62
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={3d,2u} r1={2d} r2={3d} r3={3d} r4={4d,1u} r5={4d,1u} r6={4d,1u} r7={3d} r14={1d,8u} r15={1d,10u} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r128={2d} r129={2d} r130={2d} r131={2d} r132={2d} r136={2d} r137={2d} r138={2d} r139={2d} r140={2d} r141={2d} r145={1d,7u} r146={3d} r147={5d,3u} r148={2d} r149={2d} r150={2d} r151={2d,1u} r152={2d} r153={1d,8u} r154={2u} r172={2d,1u} r174={2d,2u} r175={2d,3u} r177={2d,2u,1e} r178={2d,2u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r193={2d,2u} r194={2d,2u} 
;;    total ref usage 271{208d,62u,1e} in 30{28 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(2){ }d10(3){ }d14(4){ }d18(5){ }d22(6){ }d25(7){ }d26(14){ }d27(15){ }d86(68){ }d89(69){ }d92(70){ }d95(71){ }d98(72){ }d101(73){ }d104(74){ }d107(75){ }d170(145){ }d173(146){ }d189(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 154 [fpscr0]
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 174 175 178 194
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 174 175 178 194
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 174 175 178 194
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 174 175 178 194

( 3 2 )->[3]->( 3 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u4(14){ }u5(15){ }u6(145){ }u7(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 174 175 178 194
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 174 175 178 194
;; lr  def 	 147 [t] 174 175 178 194
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 174 175 178 194
;; live  gen 	 174 175 178 194
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 174 175 178 194
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 174 175 178 194

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(14){ }u18(15){ }u19(145){ }u20(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 172 177 188 193
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 172 177 188 193
;; live  kill	 146 [pr]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 172 177 193
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 172 177 193

( 5 4 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(14){ }u28(15){ }u29(145){ }u30(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 172 177 193
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 172 177 193
;; lr  def 	 147 [t] 172 177 189 193
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 172 177 193
;; live  gen 	 172 177 189 193
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 172 177 193
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 172 177 193

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(14){ }u38(15){ }u39(145){ }u40(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 177
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 177
;; lr  def 	 147 [t] 190
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 177
;; live  gen 	 147 [t] 190
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 6 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(14){ }u46(15){ }u47(145){ }u48(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 191
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 191
;; live  kill	 146 [pr]
;; lr  out 	 15 [r15] 145 [ap] 153 [sfp]
;; live  out 	 15 [r15] 145 [ap] 153 [sfp]

( 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u52(14){ }u53(15){ }u54(145){ }u55(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 0 [r0]
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 0 [r0] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u57(0){ }u58(14){ }u59(15){ }u60(151){ }u61(153){ }}
;; lr  in  	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 140 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 44 to worklist
  Adding insn 138 to worklist
  Adding insn 57 to worklist
  Adding insn 60 to worklist
  Adding insn 69 to worklist
Finished finding needed instructions:
processing block 7 lr out =  15 [r15] 145 [ap] 153 [sfp]
  Adding insn 59 to worklist
processing block 8 lr out =  0 [r0] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
  Adding insn 68 to worklist
processing block 6 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 5 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 172 177 193
  Adding insn 137 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 172 177 193
  Adding insn 108 to worklist
  Adding insn 21 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 174 175 178 194
  Adding insn 139 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 174 175 178 194
  Adding insn 110 to worklist
  Adding insn 20 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 11 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 11 (  1.2)


SMS analysis phase
===================

SMS loop num: 2 sms-7.c:37
SMS doloop_register_get failed
SMS loop num: 1 sms-7.c:30
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [100]
 3 bb 3  [9900]
 4 bb 4  [100]
 5 bb 5  [9900]
 6 bb 6  [100]
 7 bb 7  [0]
 8 bb 8  [100]
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={3d,2u} r1={2d} r2={3d} r3={3d} r4={4d,1u} r5={4d,1u} r6={4d,1u} r7={3d} r14={1d,8u} r15={1d,10u} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r128={2d} r129={2d} r130={2d} r131={2d} r132={2d} r136={2d} r137={2d} r138={2d} r139={2d} r140={2d} r141={2d} r145={1d,7u} r146={3d} r147={5d,3u} r148={2d} r149={2d} r150={2d} r151={2d,1u} r152={2d} r153={1d,8u} r154={2u} r172={2d,1u} r174={2d,2u} r175={2d,3u} r177={2d,2u,1e} r178={2d,2u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r193={2d,2u} r194={2d,2u} 
;;    total ref usage 271{208d,62u,1e} in 30{28 regular + 2 call} insns.
(note 18 0 22 NOTE_INSN_DELETED)
(note 22 18 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 19 22 24 2 NOTE_INSN_FUNCTION_BEG)
(insn 24 19 25 2 (set (reg:SI 178 [ ivtmp.43 ])
        (symbol_ref:SI ("c")  <var_decl 0x14260b7e0 c>)) 255 {movsi_ie}
     (nil))
(insn 25 24 20 2 (set (reg:SI 174 [ ivtmp.46 ])
        (symbol_ref:SI ("b")  <var_decl 0x14260b750 b>)) 255 {movsi_ie}
     (nil))
(insn 20 25 110 2 (set (reg/v:SI 175 [ i ])
        (const_int 0 [0])) sms-7.c:30 255 {movsi_ie}
     (nil))
(insn 110 20 32 2 (set (reg:SI 194)
        (const_int 100 [0x64])) sms-7.c:30 -1
     (nil))
(code_label 32 110 26 3 6 "" [1 uses])
(note 26 32 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (mem:HI (reg:SI 178 [ ivtmp.43 ]) [2 MEM[base: _28, offset: 0B]+0 S2 A16])
        (subreg:HI (reg/v:SI 175 [ i ]) 2)) sms-7.c:32 274 {*movhi}
     (nil))
(insn 28 27 29 3 (set (reg:SI 178 [ ivtmp.43 ])
        (plus:SI (reg:SI 178 [ ivtmp.43 ])
            (const_int 2 [0x2]))) 66 {*addsi3}
     (nil))
(insn 29 28 30 3 (set (mem:SI (reg:SI 174 [ ivtmp.46 ]) [1 MEM[base: _29, offset: 0B]+0 S4 A32])
        (reg/v:SI 175 [ i ])) sms-7.c:32 255 {movsi_ie}
     (nil))
(insn 30 29 31 3 (set (reg/v:SI 175 [ i ])
        (plus:SI (reg/v:SI 175 [ i ])
            (const_int 1 [0x1]))) sms-7.c:30 66 {*addsi3}
     (nil))
(insn 31 30 139 3 (set (reg:SI 174 [ ivtmp.46 ])
        (plus:SI (reg:SI 174 [ ivtmp.46 ])
            (const_int 4 [0x4]))) 66 {*addsi3}
     (nil))
(insn 139 31 140 3 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 194)
                    (const_int 1 [0x1])))
            (set (reg:SI 194)
                (plus:SI (reg:SI 194)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-7.c:30 -1
     (nil))
(jump_insn 140 139 36 3 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) sms-7.c:30 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 32)
(note 36 140 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 36 41 4 (set (reg/f:SI 188)
        (symbol_ref:SI ("foo") [flags 0x3]  <function_decl 0x1426e9870 foo>)) sms-7.c:34 255 {movsi_ie}
     (nil))
(insn 41 40 42 4 (set (reg:SI 6 r6)
        (symbol_ref:SI ("c")  <var_decl 0x14260b7e0 c>)) sms-7.c:34 255 {movsi_ie}
     (nil))
(insn 42 41 43 4 (set (reg:SI 5 r5)
        (symbol_ref:SI ("b")  <var_decl 0x14260b750 b>)) sms-7.c:34 255 {movsi_ie}
     (nil))
(insn 43 42 44 4 (set (reg:SI 4 r4)
        (symbol_ref:SI ("a")  <var_decl 0x14260b6c0 a>)) sms-7.c:34 255 {movsi_ie}
     (nil))
(call_insn 44 43 45 4 (parallel [
            (call (mem:SI (reg/f:SI 188) [0 foo S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-7.c:34 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 188)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_CALL_DECL (symbol_ref:SI ("foo") [flags 0x3]  <function_decl 0x1426e9870 foo>)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:SI (use (reg:SI 4 r4))
        (expr_list:SI (use (reg:SI 5 r5))
            (expr_list:SI (use (reg:SI 6 r6))
                (nil)))))
(insn 45 44 21 4 (set (reg:SI 172 [ ivtmp.34 ])
        (symbol_ref:SI ("a")  <var_decl 0x14260b6c0 a>)) 255 {movsi_ie}
     (nil))
(insn 21 45 108 4 (set (reg/v:SI 177 [ res ])
        (const_int 0 [0])) sms-7.c:36 255 {movsi_ie}
     (nil))
(insn 108 21 51 4 (set (reg:SI 193)
        (const_int 100 [0x64])) sms-7.c:36 -1
     (nil))
(code_label 51 108 47 5 7 "" [1 uses])
(note 47 51 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 5 (set (reg:SI 189 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 172 [ ivtmp.34 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-7.c:39 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 172 [ ivtmp.34 ])
        (nil)))
(insn 49 48 137 5 (set (reg/v:SI 177 [ res ])
        (plus:SI (reg/v:SI 177 [ res ])
            (reg:SI 189 [ MEM[base: _20, offset: 0B] ]))) sms-7.c:39 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 189 [ MEM[base: _20, offset: 0B] ])
        (nil)))
(insn 137 49 138 5 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 193)
                    (const_int 1 [0x1])))
            (set (reg:SI 193)
                (plus:SI (reg:SI 193)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-7.c:37 -1
     (nil))
(jump_insn 138 137 54 5 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) sms-7.c:37 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 51)
(note 54 138 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 6 (set (reg:SI 190)
        (const_int 328350 [0x5029e])) sms-7.c:41 255 {movsi_ie}
     (nil))
(insn 56 55 57 6 (set (reg:SI 147 t)
        (eq:SI (reg/v:SI 177 [ res ])
            (reg:SI 190))) sms-7.c:41 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_DEAD (reg/v:SI 177 [ res ])
            (expr_list:REG_EQUAL (eq:SI (reg/v:SI 177 [ res ])
                    (const_int 328350 [0x5029e]))
                (nil)))))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) sms-7.c:41 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 62)
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg/f:SI 191)
        (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)) sms-7.c:42 255 {movsi_ie}
     (nil))
(call_insn 60 59 61 7 (parallel [
            (call (mem:SI (reg/f:SI 191) [0 __builtin_abort S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-7.c:42 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 191)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (nil))
(barrier 61 60 62)
(code_label 62 61 63 8 8 "" [1 uses])
(note 63 62 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 63 69 8 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) sms-7.c:45 255 {movsi_ie}
     (nil))
(insn 69 68 0 8 (use (reg/i:SI 0 r0)) sms-7.c:45 -1
     (nil))
