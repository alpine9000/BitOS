
;; Function foo (foo, funcdef_no=0, decl_uid=1458, cgraph_uid=0, symbol_order=0)



try_optimize_cfg iteration 1

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


foo

Dataflow summary:
def_info->table_size = 43, use_info->table_size = 51
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 4[r4] 5[r5] 6[r6] 147[t] 149[macl]
;;  ref usage 	r2={1d} r3={1d} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={1d} r14={1d,4u} r15={1d,4u} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r145={1d,3u} r146={1d} r147={1d,1u} r149={4d,4u} r151={1u} r153={1d,4u} r204={2d,5u} r205={2d,5u} r206={2d,5u} r211={1d,1u} r212={1d,1u} r214={1d,1u} r215={1d,1u} r217={1d,1u} r218={1d,1u} r220={1d,1u} r221={1d,1u} r222={2d,2u} 
;;    total ref usage 89{40d,49u,0e} in 25{25 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(2){ }d1(3){ }d2(4){ }d3(5){ }d4(6){ }d5(7){ }d6(14){ }d7(15){ }d8(68){ }d9(69){ }d10(70){ }d11(71){ }d12(72){ }d13(73){ }d14(74){ }d15(75){ }d16(145){ }d17(146){ }d23(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 151 []
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 204 205 206 222
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 204 205 206 222
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 204 205 206 222
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 204 205 206 222

( 3 2 )->[3]->( 3 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(14){ }u11(15){ }u12(145){ }u13(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 204 205 206 222
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 204 205 206 222
;; lr  def 	 147 [t] 149 [macl] 204 205 206 211 212 214 215 217 218 220 221 222
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 204 205 206 222
;; live  gen 	 149 [macl] 204 205 206 211 212 214 215 217 218 220 221 222
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 204 205 206 222
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 204 205 206 222

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u43(14){ }u44(15){ }u45(145){ }u46(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u47(14){ }u48(15){ }u49(151){ }u50(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 121 to worklist
  Adding insn 62 to worklist
  Adding insn 57 to worklist
  Adding insn 52 to worklist
  Adding insn 47 to worklist
Finished finding needed instructions:
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 204 205 206 222
  Adding insn 120 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 204 205 206 222
  Adding insn 101 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


SMS analysis phase
===================

SMS loop num: 1 sms-6.c:12
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [385]
 3 bb 3  [9615]
 4 compensation  [385]
starting the processing of deferred insns
ending the processing of deferred insns


foo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 4[r4] 5[r5] 6[r6] 147[t] 149[macl]
;;  ref usage 	r2={1d} r3={1d} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={1d} r14={1d,4u} r15={1d,4u} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r145={1d,3u} r146={1d} r147={1d,1u} r149={4d,4u} r151={1u} r153={1d,4u} r204={2d,5u} r205={2d,5u} r206={2d,5u} r211={1d,1u} r212={1d,1u} r214={1d,1u} r215={1d,1u} r217={1d,1u} r218={1d,1u} r220={1d,1u} r221={1d,1u} r222={2d,2u} 
;;    total ref usage 89{40d,49u,0e} in 25{25 regular + 0 call} insns.
(note 28 0 33 NOTE_INSN_DELETED)
(note 33 28 29 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 29 33 30 2 NOTE_INSN_DELETED)
(note 30 29 31 2 NOTE_INSN_DELETED)
(note 31 30 32 2 NOTE_INSN_DELETED)
(note 32 31 35 2 NOTE_INSN_FUNCTION_BEG)
(insn 35 32 36 2 (set (reg:SI 206 [ ivtmp.12 ])
        (reg:SI 5 r5 [ b ])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 5 r5 [ b ])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 205 [ ivtmp.14 ])
        (reg:SI 6 r6 [ c ])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 6 r6 [ c ])
        (nil)))
(insn 37 36 101 2 (set (reg:SI 204 [ ivtmp.15 ])
        (reg:SI 4 r4 [ a ])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 4 r4 [ a ])
        (nil)))
(insn 101 37 66 2 (set (reg:SI 222)
        (const_int 25 [0x19])) -1
     (nil))
(code_label 66 101 39 3 2 "" [1 uses])
(note 39 66 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 39 44 3 (set (reg:SI 211 [ MEM[base: _72, offset: 0B] ])
        (mem:SI (reg:SI 206 [ ivtmp.12 ]) [1 MEM[base: _72, offset: 0B]+0 S4 A32])) sms-6.c:14 255 {movsi_ie}
     (nil))
(insn 44 43 45 3 (set (reg:SI 212 [ MEM[base: _71, offset: 0B] ])
        (mem:SI (reg:SI 205 [ ivtmp.14 ]) [1 MEM[base: _71, offset: 0B]+0 S4 A32])) sms-6.c:14 255 {movsi_ie}
     (nil))
(insn 45 44 47 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 211 [ MEM[base: _72, offset: 0B] ])
            (reg:SI 212 [ MEM[base: _71, offset: 0B] ]))) sms-6.c:14 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 212 [ MEM[base: _71, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 211 [ MEM[base: _72, offset: 0B] ])
            (nil))))
(insn 47 45 48 3 (set (mem:SI (reg:SI 204 [ ivtmp.15 ]) [1 MEM[base: _70, offset: 0B]+0 S4 A32])
        (reg:SI 149 macl)) sms-6.c:14 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 48 47 49 3 (set (reg:SI 214 [ MEM[base: _72, offset: 4B] ])
        (mem:SI (plus:SI (reg:SI 206 [ ivtmp.12 ])
                (const_int 4 [0x4])) [1 MEM[base: _72, offset: 4B]+0 S4 A32])) sms-6.c:15 255 {movsi_ie}
     (nil))
(insn 49 48 50 3 (set (reg:SI 215 [ MEM[base: _71, offset: 4B] ])
        (mem:SI (plus:SI (reg:SI 205 [ ivtmp.14 ])
                (const_int 4 [0x4])) [1 MEM[base: _71, offset: 4B]+0 S4 A32])) sms-6.c:15 255 {movsi_ie}
     (nil))
(insn 50 49 52 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 214 [ MEM[base: _72, offset: 4B] ])
            (reg:SI 215 [ MEM[base: _71, offset: 4B] ]))) sms-6.c:15 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 215 [ MEM[base: _71, offset: 4B] ])
        (expr_list:REG_DEAD (reg:SI 214 [ MEM[base: _72, offset: 4B] ])
            (nil))))
(insn 52 50 53 3 (set (mem:SI (plus:SI (reg:SI 204 [ ivtmp.15 ])
                (const_int 4 [0x4])) [1 MEM[base: _70, offset: 4B]+0 S4 A32])
        (reg:SI 149 macl)) sms-6.c:15 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 53 52 54 3 (set (reg:SI 217 [ MEM[base: _72, offset: 8B] ])
        (mem:SI (plus:SI (reg:SI 206 [ ivtmp.12 ])
                (const_int 8 [0x8])) [1 MEM[base: _72, offset: 8B]+0 S4 A32])) sms-6.c:16 255 {movsi_ie}
     (nil))
(insn 54 53 55 3 (set (reg:SI 218 [ MEM[base: _71, offset: 8B] ])
        (mem:SI (plus:SI (reg:SI 205 [ ivtmp.14 ])
                (const_int 8 [0x8])) [1 MEM[base: _71, offset: 8B]+0 S4 A32])) sms-6.c:16 255 {movsi_ie}
     (nil))
(insn 55 54 57 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 217 [ MEM[base: _72, offset: 8B] ])
            (reg:SI 218 [ MEM[base: _71, offset: 8B] ]))) sms-6.c:16 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 218 [ MEM[base: _71, offset: 8B] ])
        (expr_list:REG_DEAD (reg:SI 217 [ MEM[base: _72, offset: 8B] ])
            (nil))))
(insn 57 55 58 3 (set (mem:SI (plus:SI (reg:SI 204 [ ivtmp.15 ])
                (const_int 8 [0x8])) [1 MEM[base: _70, offset: 8B]+0 S4 A32])
        (reg:SI 149 macl)) sms-6.c:16 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 58 57 59 3 (set (reg:SI 220 [ MEM[base: _72, offset: 12B] ])
        (mem:SI (plus:SI (reg:SI 206 [ ivtmp.12 ])
                (const_int 12 [0xc])) [1 MEM[base: _72, offset: 12B]+0 S4 A32])) sms-6.c:17 255 {movsi_ie}
     (nil))
(insn 59 58 60 3 (set (reg:SI 221 [ MEM[base: _71, offset: 12B] ])
        (mem:SI (plus:SI (reg:SI 205 [ ivtmp.14 ])
                (const_int 12 [0xc])) [1 MEM[base: _71, offset: 12B]+0 S4 A32])) sms-6.c:17 255 {movsi_ie}
     (nil))
(insn 60 59 62 3 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 220 [ MEM[base: _72, offset: 12B] ])
            (reg:SI 221 [ MEM[base: _71, offset: 12B] ]))) sms-6.c:17 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 221 [ MEM[base: _71, offset: 12B] ])
        (expr_list:REG_DEAD (reg:SI 220 [ MEM[base: _72, offset: 12B] ])
            (nil))))
(insn 62 60 63 3 (set (mem:SI (plus:SI (reg:SI 204 [ ivtmp.15 ])
                (const_int 12 [0xc])) [1 MEM[base: _70, offset: 12B]+0 S4 A32])
        (reg:SI 149 macl)) sms-6.c:17 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 63 62 64 3 (set (reg:SI 206 [ ivtmp.12 ])
        (plus:SI (reg:SI 206 [ ivtmp.12 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 64 63 65 3 (set (reg:SI 205 [ ivtmp.14 ])
        (plus:SI (reg:SI 205 [ ivtmp.14 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 65 64 120 3 (set (reg:SI 204 [ ivtmp.15 ])
        (plus:SI (reg:SI 204 [ ivtmp.15 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 120 65 121 3 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 222)
                    (const_int 1 [0x1])))
            (set (reg:SI 222)
                (plus:SI (reg:SI 222)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-6.c:12 -1
     (nil))
(jump_insn 121 120 69 3 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) sms-6.c:12 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9600 (nil)))
 -> 66)
(note 69 121 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

;; Function main (main, funcdef_no=1, decl_uid=1467, cgraph_uid=1, symbol_order=4) (executed once)



try_optimize_cfg iteration 1

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 2
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 11 (  1.2)


main

Dataflow summary:
def_info->table_size = 208, use_info->table_size = 62
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={3d,2u} r1={2d} r2={3d} r3={3d} r4={4d,1u} r5={4d,1u} r6={4d,1u} r7={3d} r14={1d,8u} r15={1d,10u} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r128={2d} r129={2d} r130={2d} r131={2d} r132={2d} r136={2d} r137={2d} r138={2d} r139={2d} r140={2d} r141={2d} r145={1d,7u} r146={3d} r147={5d,3u} r148={2d} r149={2d} r150={2d} r151={2d,1u} r152={2d} r153={1d,8u} r154={2u} r162={2d,1u} r163={2d,2u} r165={2d,3u} r167={2d,2u,1e} r168={2d,2u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={2d,2u} r183={2d,2u} 
;;    total ref usage 271{208d,62u,1e} in 30{28 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(2){ }d10(3){ }d14(4){ }d18(5){ }d22(6){ }d25(7){ }d26(14){ }d27(15){ }d86(68){ }d89(69){ }d92(70){ }d95(71){ }d98(72){ }d101(73){ }d104(74){ }d107(75){ }d170(145){ }d173(146){ }d189(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 154 [fpscr0]
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 163 165 168 183
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 163 165 168 183
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 165 168 183
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 165 168 183

( 3 2 )->[3]->( 3 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u4(14){ }u5(15){ }u6(145){ }u7(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 165 168 183
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 165 168 183
;; lr  def 	 147 [t] 163 165 168 183
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 165 168 183
;; live  gen 	 163 165 168 183
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 165 168 183
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 165 168 183

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(14){ }u18(15){ }u19(145){ }u20(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 162 167 177 182
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 162 167 177 182
;; live  kill	 146 [pr]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 162 167 182
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 167 182

( 5 4 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(14){ }u28(15){ }u29(145){ }u30(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 162 167 182
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 167 182
;; lr  def 	 147 [t] 162 167 178 182
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 167 182
;; live  gen 	 162 167 178 182
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 162 167 182
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 167 182

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(14){ }u38(15){ }u39(145){ }u40(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 167
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 167
;; lr  def 	 147 [t] 179
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 167
;; live  gen 	 147 [t] 179
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 6 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(14){ }u46(15){ }u47(145){ }u48(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 180
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 180
;; live  kill	 146 [pr]
;; lr  out 	 15 [r15] 145 [ap] 153 [sfp]
;; live  out 	 15 [r15] 145 [ap] 153 [sfp]

( 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u52(14){ }u53(15){ }u54(145){ }u55(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 0 [r0]
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 0 [r0] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u57(0){ }u58(14){ }u59(15){ }u60(151){ }u61(153){ }}
;; lr  in  	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 123 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 27 to worklist
  Adding insn 121 to worklist
  Adding insn 40 to worklist
  Adding insn 43 to worklist
  Adding insn 52 to worklist
Finished finding needed instructions:
processing block 7 lr out =  15 [r15] 145 [ap] 153 [sfp]
  Adding insn 42 to worklist
processing block 8 lr out =  0 [r0] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
  Adding insn 51 to worklist
processing block 6 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
  Adding insn 39 to worklist
  Adding insn 38 to worklist
processing block 5 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 162 167 182
  Adding insn 120 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 162 167 182
  Adding insn 91 to worklist
  Adding insn 4 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 165 168 183
  Adding insn 122 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 163 165 168 183
  Adding insn 93 to worklist
  Adding insn 3 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 11 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 11 (  1.2)


SMS analysis phase
===================

SMS loop num: 2 sms-6.c:35
SMS doloop_register_get failed
SMS loop num: 1 sms-6.c:28
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [100]
 3 bb 3  [9900]
 4 bb 4  [100]
 5 bb 5  [9900]
 6 bb 6  [100]
 7 bb 7  [0]
 8 bb 8  [100]
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={3d,2u} r1={2d} r2={3d} r3={3d} r4={4d,1u} r5={4d,1u} r6={4d,1u} r7={3d} r14={1d,8u} r15={1d,10u} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r128={2d} r129={2d} r130={2d} r131={2d} r132={2d} r136={2d} r137={2d} r138={2d} r139={2d} r140={2d} r141={2d} r145={1d,7u} r146={3d} r147={5d,3u} r148={2d} r149={2d} r150={2d} r151={2d,1u} r152={2d} r153={1d,8u} r154={2u} r162={2d,1u} r163={2d,2u} r165={2d,3u} r167={2d,2u,1e} r168={2d,2u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={2d,2u} r183={2d,2u} 
;;    total ref usage 271{208d,62u,1e} in 30{28 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:SI 163 [ ivtmp.40 ])
        (symbol_ref:SI ("c")  <var_decl 0x14260b7e0 c>)) 255 {movsi_ie}
     (nil))
(insn 8 7 3 2 (set (reg:SI 168 [ ivtmp.42 ])
        (symbol_ref:SI ("b")  <var_decl 0x14260b750 b>)) 255 {movsi_ie}
     (nil))
(insn 3 8 93 2 (set (reg/v:SI 165 [ i ])
        (const_int 0 [0])) sms-6.c:28 255 {movsi_ie}
     (nil))
(insn 93 3 15 2 (set (reg:SI 183)
        (const_int 100 [0x64])) sms-6.c:28 -1
     (nil))
(code_label 15 93 9 3 6 "" [1 uses])
(note 9 15 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (mem:SI (reg:SI 163 [ ivtmp.40 ]) [1 MEM[base: _27, offset: 0B]+0 S4 A32])
        (reg/v:SI 165 [ i ])) sms-6.c:30 255 {movsi_ie}
     (nil))
(insn 11 10 12 3 (set (mem:SI (reg:SI 168 [ ivtmp.42 ]) [1 MEM[base: _28, offset: 0B]+0 S4 A32])
        (reg/v:SI 165 [ i ])) sms-6.c:30 255 {movsi_ie}
     (nil))
(insn 12 11 13 3 (set (reg/v:SI 165 [ i ])
        (plus:SI (reg/v:SI 165 [ i ])
            (const_int 1 [0x1]))) sms-6.c:28 66 {*addsi3}
     (nil))
(insn 13 12 14 3 (set (reg:SI 163 [ ivtmp.40 ])
        (plus:SI (reg:SI 163 [ ivtmp.40 ])
            (const_int 4 [0x4]))) 66 {*addsi3}
     (nil))
(insn 14 13 122 3 (set (reg:SI 168 [ ivtmp.42 ])
        (plus:SI (reg:SI 168 [ ivtmp.42 ])
            (const_int 4 [0x4]))) 66 {*addsi3}
     (nil))
(insn 122 14 123 3 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 183)
                    (const_int 1 [0x1])))
            (set (reg:SI 183)
                (plus:SI (reg:SI 183)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-6.c:28 -1
     (nil))
(jump_insn 123 122 19 3 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) sms-6.c:28 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 15)
(note 19 123 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 19 24 4 (set (reg/f:SI 177)
        (symbol_ref:SI ("foo") [flags 0x3]  <function_decl 0x1426e9870 foo>)) sms-6.c:32 255 {movsi_ie}
     (nil))
(insn 24 23 25 4 (set (reg:SI 6 r6)
        (symbol_ref:SI ("c")  <var_decl 0x14260b7e0 c>)) sms-6.c:32 255 {movsi_ie}
     (nil))
(insn 25 24 26 4 (set (reg:SI 5 r5)
        (symbol_ref:SI ("b")  <var_decl 0x14260b750 b>)) sms-6.c:32 255 {movsi_ie}
     (nil))
(insn 26 25 27 4 (set (reg:SI 4 r4)
        (symbol_ref:SI ("a")  <var_decl 0x14260b6c0 a>)) sms-6.c:32 255 {movsi_ie}
     (nil))
(call_insn 27 26 28 4 (parallel [
            (call (mem:SI (reg/f:SI 177) [0 foo S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-6.c:32 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_CALL_DECL (symbol_ref:SI ("foo") [flags 0x3]  <function_decl 0x1426e9870 foo>)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:SI (use (reg:SI 4 r4))
        (expr_list:SI (use (reg:SI 5 r5))
            (expr_list:SI (use (reg:SI 6 r6))
                (nil)))))
(insn 28 27 4 4 (set (reg:SI 162 [ ivtmp.33 ])
        (symbol_ref:SI ("a")  <var_decl 0x14260b6c0 a>)) 255 {movsi_ie}
     (nil))
(insn 4 28 91 4 (set (reg/v:SI 167 [ res ])
        (const_int 0 [0])) sms-6.c:34 255 {movsi_ie}
     (nil))
(insn 91 4 34 4 (set (reg:SI 182)
        (const_int 100 [0x64])) sms-6.c:34 -1
     (nil))
(code_label 34 91 30 5 7 "" [1 uses])
(note 30 34 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:SI 178 [ MEM[base: _4, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 162 [ ivtmp.33 ])) [1 MEM[base: _4, offset: 0B]+0 S4 A32])) sms-6.c:37 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 162 [ ivtmp.33 ])
        (nil)))
(insn 32 31 120 5 (set (reg/v:SI 167 [ res ])
        (plus:SI (reg/v:SI 167 [ res ])
            (reg:SI 178 [ MEM[base: _4, offset: 0B] ]))) sms-6.c:37 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 178 [ MEM[base: _4, offset: 0B] ])
        (nil)))
(insn 120 32 121 5 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 182)
                    (const_int 1 [0x1])))
            (set (reg:SI 182)
                (plus:SI (reg:SI 182)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-6.c:35 -1
     (nil))
(jump_insn 121 120 37 5 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) sms-6.c:35 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 34)
(note 37 121 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:SI 179)
        (const_int 328350 [0x5029e])) sms-6.c:39 255 {movsi_ie}
     (nil))
(insn 39 38 40 6 (set (reg:SI 147 t)
        (eq:SI (reg/v:SI 167 [ res ])
            (reg:SI 179))) sms-6.c:39 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_DEAD (reg/v:SI 167 [ res ])
            (expr_list:REG_EQUAL (eq:SI (reg/v:SI 167 [ res ])
                    (const_int 328350 [0x5029e]))
                (nil)))))
(jump_insn 40 39 41 6 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) sms-6.c:39 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 45)
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg/f:SI 180)
        (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)) sms-6.c:40 255 {movsi_ie}
     (nil))
(call_insn 43 42 44 7 (parallel [
            (call (mem:SI (reg/f:SI 180) [0 __builtin_abort S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-6.c:40 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (nil))
(barrier 44 43 45)
(code_label 45 44 46 8 8 "" [1 uses])
(note 46 45 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 46 52 8 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) sms-6.c:43 255 {movsi_ie}
     (nil))
(insn 52 51 0 8 (use (reg/i:SI 0 r0)) sms-6.c:43 -1
     (nil))
