
;; Function f (f, funcdef_no=0, decl_uid=1457, cgraph_uid=0, symbol_order=1)



try_optimize_cfg iteration 1

changing bb of uid 249
  unscanned insn
changing bb of uid 12
changing bb of uid 14
  from 4 to 6
changing bb of uid 16
  from 4 to 6
changing bb of uid 17
changing bb of uid 18
  from 4 to 6
changing bb of uid 20
  from 4 to 6
changing bb of uid 21
  from 4 to 6
changing bb of uid 22
  from 4 to 6
changing bb of uid 247
  from 4 to 6
changing bb of uid 248
  from 4 to 6
verify found no changes in insn with uid = 248.
Edge 6->4 redirected to 6
Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 5
;;
;; Loop 1
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 6 }
;; 6 succs { 6 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 8 (  1.1)


f

Dataflow summary:
def_info->table_size = 40, use_info->table_size = 46
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 4[r4] 147[t]
;;  ref usage 	r2={1d} r3={1d} r4={1d,1u} r5={1d} r6={1d} r7={1d} r14={1d,6u} r15={1d,6u} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r145={1d,5u} r146={1d} r147={3d,2u} r151={1u} r153={1d,6u} r162={2d,2u} r166={2d,4u,1e} r171={1d,1u} r173={1d,1u,1e} r174={1d,1u} r177={1d,2u} r178={1d,1u} r179={3d,2u} r180={1d,1u} r181={1d,1u} r182={1d,1u,1e} r183={1d,1u} 
;;    total ref usage 86{38d,45u,3e} in 20{20 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(2){ }d1(3){ }d2(4){ }d3(5){ }d4(6){ }d5(7){ }d6(14){ }d7(15){ }d8(68){ }d9(69){ }d10(70){ }d11(71){ }d12(72){ }d13(73){ }d14(74){ }d15(75){ }d16(145){ }d17(146){ }d21(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 151 []
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 4 [r4] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 4 [r4] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 4 [r4] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 4 [r4] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 147 [t] 162 166 177 178 179 180 181 182 183
;; live  in  	 4 [r4] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 147 [t] 162 166 177 178 179 180 181 182 183
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 166 177 179

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(14){ }u16(15){ }u17(145){ }u18(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 179
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 166 177
;; live  gen 	 179
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 166 177 179

( 3 2 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(14){ }u20(15){ }u21(145){ }u22(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 166 177 179
;; live  gen 	 162 166 171 173 174 179
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 166 177 179

( 4 6 )->[6]->( 6 5 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(14){ }u-1(15){ }u-1(145){ }u-1(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 162 166 177 179
;; lr  def 	 147 [t] 162 166 171 173 174 179
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
;; live  out 	

( 6 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u38(14){ }u39(15){ }u40(145){ }u41(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u42(14){ }u43(15){ }u44(151){ }u45(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 98 to worklist
  Adding insn 248 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
processing block 5 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
processing block 6 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
  Adding insn 247 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
  Adding insn 100 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 162 166 177 179
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 94 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 24 to worklist
  Adding insn 61 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 8 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 8 (  1.1)


SMS analysis phase
===================

SMS loop num: 1 sms-1.c:24
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [900]
 3 bb 3  [0]
 4 bb 4  [900]
 5 bb 6  [10000]
 6 compensation  [900]
starting the processing of deferred insns
ending the processing of deferred insns


f

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 4[r4] 147[t]
;;  ref usage 	r2={1d} r3={1d} r4={1d,1u} r5={1d} r6={1d} r7={1d} r14={1d,6u} r15={1d,6u} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r145={1d,5u} r146={1d} r147={3d,2u} r151={1u} r153={1d,6u} r162={2d,2u} r166={2d,4u,1e} r171={1d,1u} r173={1d,1u,1e} r174={1d,1u} r177={1d,2u} r178={1d,1u} r179={3d,2u} r180={1d,1u} r181={1d,1u} r182={1d,1u,1e} r183={1d,1u} 
;;    total ref usage 86{38d,45u,3e} in 20{20 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v:SI 166 [ m ])
        (reg:SI 4 r4 [ m ])) sms-1.c:15 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 4 r4 [ m ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 61 2 (set (reg/v:SI 162 [ sh ])
        (const_int 256 [0x100])) sms-1.c:17 255 {movsi_ie}
     (nil))
(insn 61 4 24 2 (set (reg/f:SI 177)
        (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>)) -1
     (nil))
(insn 24 61 89 2 (set (reg:SI 178)
        (const_int 1073741839 [0x4000000f])) sms-1.c:24 255 {movsi_ie}
     (nil))
(insn 89 24 90 2 (set (reg:SI 180)
        (minus:SI (reg:SI 178)
            (reg/v:SI 166 [ m ]))) sms-1.c:24 -1
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_EQUAL (minus:SI (const_int 1073741839 [0x4000000f])
                (reg/v:SI 166 [ m ]))
            (nil))))
(insn 90 89 91 2 (set (reg:SI 181)
        (lshiftrt:SI (reg:SI 180)
            (const_int 2 [0x2]))) sms-1.c:24 -1
     (expr_list:REG_DEAD (reg:SI 180)
        (nil)))
(insn 91 90 94 2 (set (reg:SI 179)
        (plus:SI (reg:SI 181)
            (const_int 1 [0x1]))) sms-1.c:24 -1
     (expr_list:REG_DEAD (reg:SI 181)
        (nil)))
(insn 94 91 96 2 (set (reg:SI 182)
        (plus:SI (reg/v:SI 166 [ m ])
            (const_int 4 [0x4]))) -1
     (nil))
(insn 96 94 97 2 (set (reg:SI 183)
        (const_int 1073741843 [0x40000013])) -1
     (nil))
(insn 97 96 98 2 (set (reg:SI 147 t)
        (gt:SI (reg:SI 182)
            (reg:SI 183))) -1
     (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:SI 182)
            (expr_list:REG_EQUAL (gt:SI (reg:SI 182)
                    (const_int 1073741843 [0x40000013]))
                (nil)))))
(jump_insn 98 97 92 2 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 23)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 23)
(note 92 98 100 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 100 92 23 3 (set (reg:SI 179)
        (const_int 1 [0x1])) -1
     (nil))
(code_label 23 100 7 4 2 "" [1 uses])
(note 7 23 250 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 250 7 249 5 5 "" [1 uses])
(note 249 250 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 12 249 14 5 NOTE_INSN_DELETED)
(insn 14 12 16 5 (parallel [
            (set (reg/v:SI 162 [ sh ])
                (ashiftrt:SI (reg/v:SI 162 [ sh ])
                    (const_int 1 [0x1])))
            (clobber (reg:SI 147 t))
        ]) sms-1.c:21 173 {ashrsi3_k}
     (expr_list:REG_UNUSED (reg:SI 147 t)
        (nil)))
(insn 16 14 17 5 (set (reg:SI 171)
        (ashift:SI (reg/v:SI 162 [ sh ])
            (const_int 2 [0x2]))) sms-1.c:21 159 {ashlsi3_k}
     (nil))
(note 17 16 18 5 NOTE_INSN_DELETED)
(insn 18 17 20 5 (set (reg:SI 173 [ D.1490 ])
        (ashift:SI (reg/v:SI 166 [ m ])
            (const_int 3 [0x3]))) sms-1.c:21 162 {ashlsi3_n}
     (nil))
(insn 20 18 21 5 (parallel [
            (set (reg:SI 174 [ D.1491 ])
                (plus:SI (reg/f:SI 177)
                    (reg:SI 173 [ D.1490 ])))
            (clobber (scratch:SI))
        ]) sms-1.c:21 64 {addsi3_scr}
     (expr_list:REG_DEAD (reg:SI 173 [ D.1490 ])
        (expr_list:REG_EQUAL (plus:SI (reg:SI 173 [ D.1490 ])
                (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>))
            (nil))))
(insn 21 20 22 5 (set (mem/f:SI (plus:SI (reg/f:SI 177)
                (reg:SI 171)) [1 a S4 A32])
        (reg:SI 174 [ D.1491 ])) sms-1.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 174 [ D.1491 ])
        (expr_list:REG_DEAD (reg:SI 171)
            (nil))))
(insn 22 21 247 5 (set (reg/v:SI 166 [ m ])
        (plus:SI (reg/v:SI 166 [ m ])
            (const_int 4 [0x4]))) sms-1.c:22 66 {*addsi3}
     (nil))
(insn 247 22 248 5 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 179)
                    (const_int 1 [0x1])))
            (set (reg:SI 179)
                (plus:SI (reg:SI 179)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-1.c:24 -1
     (nil))
(jump_insn 248 247 27 5 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 250)
            (pc))) sms-1.c:24 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 250)
(note 27 248 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

;; Function main (main, funcdef_no=1, decl_uid=1463, cgraph_uid=1, symbol_order=2) (executed once)



try_optimize_cfg iteration 1

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [16]
 4 bb 4  [9996]
 5 bb 5  [9992]
 6 bb 6  [9988]
 7 bb 7  [9984]
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 15[r15] 146[pr] 147[t] 154[fpscr0]
;;  ref usage 	r0={4d,2u} r1={3d} r2={4d} r3={4d} r4={6d,2u} r5={4d} r6={4d} r7={4d} r14={1d,7u} r15={1d,10u} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r128={3d} r129={3d} r130={3d} r131={3d} r132={3d} r136={3d} r137={3d} r138={3d} r139={3d} r140={3d} r141={3d} r145={1d,6u} r146={4d} r147={7d,4u} r148={3d} r149={3d} r150={3d} r151={3d,1u} r152={3d} r153={1d,7u} r154={3u} r167={1d,4u} r168={1d,3u} r169={1d,2u} r173={1d,2u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r184={1d,1u} r186={1d,1u} 
;;    total ref usage 339{281d,58u,0e} in 26{23 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 167)
        (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>)) sms-1.c:30 255 {movsi_ie}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 168)
                (plus:SI (reg/f:SI 167)
                    (const_int 64 [0x40])))
            (clobber (scratch:SI))
        ]) sms-1.c:30 64 {addsi3_scr}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>)
                (const_int 64 [0x40])))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 169)
        (const_int 0 [0])) sms-1.c:30 255 {movsi_ie}
     (nil))
(insn 8 7 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 168)
                (const_int 0 [0])) [1 a+64 S4 A32])
        (reg:SI 169)) sms-1.c:30 255 {movsi_ie}
     (nil))
(insn 11 8 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 167)
                (const_int 32 [0x20])) [1 a+32 S4 A32])
        (reg:SI 169)) sms-1.c:31 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(insn 13 11 14 2 (set (reg/f:SI 173)
        (symbol_ref:SI ("f") [flags 0x3]  <function_decl 0x141ee9870 f>)) sms-1.c:32 255 {movsi_ie}
     (nil))
(insn 14 13 15 2 (set (reg:SI 4 r4)
        (const_int 1610612736 [0x60000000])) sms-1.c:32 255 {movsi_ie}
     (nil))
(call_insn 15 14 18 2 (parallel [
            (call (mem:SI (reg/f:SI 173) [0 f S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-1.c:32 314 {calli}
     (expr_list:REG_DEAD (reg:SI 154 fpscr0)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("f") [flags 0x3]  <function_decl 0x141ee9870 f>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 4 r4))
        (nil)))
(insn 18 15 19 2 (set (reg/f:SI 176 [ a+64 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 168)
                (const_int 0 [0])) [1 a+64 S4 A32])) sms-1.c:33 255 {movsi_ie}
     (expr_list:REG_EQUAL (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>)
                    (const_int 64 [0x40]))) [1 a+64 S4 A32])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 147 t)
        (eq:SI (reg/f:SI 176 [ a+64 ])
            (const_int 0 [0]))) sms-1.c:33 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg/f:SI 176 [ a+64 ])
        (nil)))
(jump_insn 20 19 27 2 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) sms-1.c:33 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 25)
(code_label 27 20 21 3 15 "" [3 uses])
(note 21 27 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:SI 177)
        (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x141e9c1b0 abort>)) sms-1.c:34 255 {movsi_ie}
     (nil))
(call_insn 23 22 24 3 (parallel [
            (call (mem:SI (reg/f:SI 177) [0 __builtin_abort S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-1.c:34 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x141e9c1b0 abort>)
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (nil))
(barrier 24 23 25)
(code_label 25 24 26 4 14 "" [1 uses])
(note 26 25 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 26 30 4 (set (reg/f:SI 179 [ a+32 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 167)
                (const_int 32 [0x20])) [1 a+32 S4 A32])) sms-1.c:33 255 {movsi_ie}
     (expr_list:REG_EQUAL (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>)
                    (const_int 32 [0x20]))) [1 a+32 S4 A32])
        (nil)))
(insn 30 29 31 4 (set (reg:SI 147 t)
        (eq:SI (reg/f:SI 179 [ a+32 ])
            (const_int 0 [0]))) sms-1.c:33 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg/f:SI 179 [ a+32 ])
        (nil)))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) sms-1.c:33 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 27)
(note 32 31 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 32 36 5 (set (reg:SI 4 r4)
        (const_int 1073741824 [0x40000000])) sms-1.c:37 255 {movsi_ie}
     (nil))
(call_insn 36 35 39 5 (parallel [
            (call (mem:SI (reg/f:SI 173) [0 f S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-1.c:37 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("f") [flags 0x3]  <function_decl 0x141ee9870 f>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 4 r4))
        (nil)))
(insn 39 36 40 5 (set (reg/f:SI 184 [ a+64 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 168)
                (const_int 0 [0])) [1 a+64 S4 A32])) sms-1.c:38 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 168)
        (expr_list:REG_EQUAL (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>)
                        (const_int 64 [0x40]))) [1 a+64 S4 A32])
            (nil))))
(insn 40 39 41 5 (set (reg:SI 147 t)
        (eq:SI (reg/f:SI 184 [ a+64 ])
            (const_int 0 [0]))) sms-1.c:38 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg/f:SI 184 [ a+64 ])
        (nil)))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 27)
            (pc))) sms-1.c:38 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 27)
(note 42 41 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 42 45 6 (set (reg/f:SI 186 [ a+32 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 167)
                (const_int 32 [0x20])) [1 a+32 S4 A32])) sms-1.c:38 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 167)
        (expr_list:REG_EQUAL (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("a")  <var_decl 0x141e0b990 a>)
                        (const_int 32 [0x20]))) [1 a+32 S4 A32])
            (nil))))
(insn 45 44 46 6 (set (reg:SI 147 t)
        (eq:SI (reg/f:SI 186 [ a+32 ])
            (const_int 0 [0]))) sms-1.c:38 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg/f:SI 186 [ a+32 ])
        (nil)))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) sms-1.c:38 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 27)
(note 47 46 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 47 53 7 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) sms-1.c:41 255 {movsi_ie}
     (nil))
(insn 53 52 0 7 (use (reg/i:SI 0 r0)) sms-1.c:41 -1
     (nil))
