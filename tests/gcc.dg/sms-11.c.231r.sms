
;; Function invert (invert, funcdef_no=0, decl_uid=1457, cgraph_uid=0, symbol_order=1)



try_optimize_cfg iteration 1

Redirecting fallthru edge 10->11 to 17
deleting insn with uid = 339.
deleting block 11
Redirecting fallthru edge 15->16 to 19
deleting insn with uid = 343.
deleting block 16
Deleted label in block 17.
Removing jump 345.
deleting insn with uid = 345.
Deleted label in block 19.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 17 18 19
;;
;; Loop 3
;;  header 18, latch 15
;;  depth 1, outer 0
;;  nodes: 18 15 14 12
;;
;; Loop 4
;;  header 12, latch 14
;;  depth 2, outer 3
;;  nodes: 12 14
;;
;; Loop 1
;;  header 3, latch 10
;;  depth 1, outer 0
;;  nodes: 3 10 9 8 7 6 5 4
;;
;; Loop 2
;;  header 5, latch 7
;;  depth 2, outer 1
;;  nodes: 5 7 6
;; 2 succs { 3 }
;; 3 succs { 4 8 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 5 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 3 17 }
;; 12 succs { 13 14 }
;; 13 succs { }
;; 14 succs { 12 15 }
;; 15 succs { 18 19 }
;; 17 succs { 18 }
;; 18 succs { 12 }
;; 19 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 24 count 24 (  1.3)


invert

Dataflow summary:
def_info->table_size = 157, use_info->table_size = 140
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 154[fpscr0] 155[fpscr1]
;;  ref usage 	r0={2d} r1={1d} r2={2d} r3={2d} r4={4d,1u} r5={4d,1u} r6={4d,1u} r7={2d} r14={1d,17u} r15={1d,18u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,16u} r146={3d} r147={10d,8u} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,19u,4e} r154={9u} r155={2d} r189={2d,2u} r190={1d,2u} r191={1d,1u} r192={2d,2u} r193={2d,3u} r194={1d,4u,1e} r196={2d,2u} r197={2d,2u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={2d,2u} r202={2d,2u} r203={2d,1u} r207={1d,1u} r208={1d,1u} r214={1d,1u} r216={1d,1u} r220={1d,1u} r223={1d,1u} r225={1d,5u} r226={2d,2u} r227={2d,2u} r228={3d,3u} 
;;    total ref usage 296{156d,135u,5e} in 53{52 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(2){ }d6(3){ }d10(4){ }d14(5){ }d18(6){ }d20(7){ }d21(14){ }d22(15){ }d52(68){ }d54(69){ }d56(70){ }d58(71){ }d60(72){ }d62(73){ }d64(74){ }d66(75){ }d98(145){ }d101(146){ }d117(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 151 [] 154 [fpscr0] 190
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 190
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 190
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 146 [pr] 147 [t] 189 192 193 202 214 225 227
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 189 192 193 202 214 225 227
;; live  kill	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 146 [pr] 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 202 225 227
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 192 193 202 225 227

( 10 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(14){ }u18(15){ }u19(145){ }u20(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 202 225 227
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 192
;; lr  def 	 147 [t] 194
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 192 193 202 225 227
;; live  gen 	 147 [t] 194
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 194 202 225 227
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 192 193 194 202 225 227

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(14){ }u25(15){ }u26(145){ }u27(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 194 202 225 227
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 193 194
;; lr  def 	 191 197 201 228
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 192 193 194 202 225 227
;; live  gen 	 191 197 201 228
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 191 192 193 194 197 201 202 225 227 228

( 4 7 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(14){ }u36(15){ }u37(145){ }u38(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 191 201
;; lr  def 	 147 [t] 155 [fpscr1] 216
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 191 192 193 194 197 201 202 225 227 228
;; live  gen 	 147 [t] 216
;; live  kill	 155 [fpscr1]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 191 192 193 194 197 201 202 225 227 228

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(14){ }u46(15){ }u47(145){ }u48(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 191 192 193 194 197 201 202 225 227 228
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 197
;; lr  def 	 190
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 191 192 193 194 197 201 202 225 227 228
;; live  gen 	 190
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 191 192 193 194 197 201 202 225 227 228

( 6 5 )->[7]->( 5 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(14){ }u51(15){ }u52(145){ }u53(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 197 201 228
;; lr  def 	 147 [t] 197 201 228
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 191 192 193 194 197 201 202 225 227 228
;; live  gen 	 197 201 228
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 191 192 193 194 197 201 202 225 227 228

( 7 3 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(14){ }u59(15){ }u60(145){ }u61(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 194 202 225 227
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 190 192
;; lr  def 	 147 [t]
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 192 193 194 202 225 227
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 193 194 202 225 227
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 193 194 202 225 227

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(14){ }u66(15){ }u67(145){ }u68(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 193 194 202 225 227
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 190 202 225
;; lr  def 	 198 220
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 193 194 202 225 227
;; live  gen 	 198 220
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 193 194 202 225 227
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 193 194 202 225 227

( 9 8 )->[10]->( 3 17 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u77(14){ }u78(15){ }u79(145){ }u80(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 193 194 202 225 227
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 193 194 202 227
;; lr  def 	 147 [t] 192 193 202 227
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 193 194 202 225 227
;; live  gen 	 192 193 202 227
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 202 225 227
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 190 192 193 202 225 227

( 14 18 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(14){ }u87(15){ }u88(145){ }u89(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0] 189 203
;; lr  def 	 147 [t] 155 [fpscr1] 189 199 200 203
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 203 207 208 226
;; live  gen 	 147 [t] 189 199 200 203
;; live  kill	 155 [fpscr1]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 203 207 208 226

( 12 )->[13]->( )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u100(14){ }u101(15){ }u102(145){ }u103(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 223
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 223
;; live  kill	 146 [pr]
;; lr  out 	 15 [r15] 145 [ap] 153 [sfp]
;; live  out 	 15 [r15] 145 [ap] 153 [sfp]

( 12 )->[14]->( 12 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u107(14){ }u108(15){ }u109(145){ }u110(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 226
;; lr  def 	 147 [t] 226
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 203 207 208 226
;; live  gen 	 226
;; live  kill	 147 [t]
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 203 207 208 226

( 14 )->[15]->( 18 19 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u113(14){ }u114(15){ }u115(145){ }u116(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 207 208
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 196 207 208
;; lr  def 	 147 [t] 196
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 207 208
;; live  gen 	 147 [t] 196
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 207
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 207

( 10 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u121(14){ }u122(15){ }u123(145){ }u124(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 196 207
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189
;; live  gen 	 196 207
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 207
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 207

( 17 15 )->[18]->( 12 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u126(14){ }u127(15){ }u128(145){ }u129(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 207
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196
;; lr  def 	 203 208 226
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 207
;; live  gen 	 203 208 226
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 189 196 203 207 208 226

( 15 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u132(14){ }u133(15){ }u134(145){ }u135(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u136(14){ }u137(15){ }u138(151){ }u139(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 45 to worklist
  Adding insn 51 to worklist
  Adding insn 58 to worklist
  Adding insn 352 to worklist
  Adding insn 71 to worklist
  Adding insn 78 to worklist
  Adding insn 350 to worklist
  Adding insn 97 to worklist
  Adding insn 100 to worklist
  Adding insn 348 to worklist
  Adding insn 111 to worklist
Finished finding needed instructions:
processing block 13 lr out =  15 [r15] 145 [ap] 153 [sfp]
  Adding insn 99 to worklist
processing block 19 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
processing block 15 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 207
  Adding insn 110 to worklist
  Adding insn 108 to worklist
processing block 14 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
  Adding insn 347 to worklist
processing block 12 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
  Adding insn 96 to worklist
  Adding insn 94 to worklist
  Adding insn 92 to worklist
processing block 18 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 203 207 208 226
  Adding insn 251 to worklist
  Adding insn 35 to worklist
  Adding insn 122 to worklist
processing block 17 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 196 207
  Adding insn 119 to worklist
  Adding insn 117 to worklist
processing block 10 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 202 225 227
  Adding insn 349 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
processing block 9 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 193 194 202 225 227
  Adding insn 77 to worklist
  Adding insn 75 to worklist
processing block 8 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 193 194 202 225 227
  Adding insn 70 to worklist
processing block 7 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
  Adding insn 351 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
processing block 6 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
  Adding insn 34 to worklist
processing block 5 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 191 192 193 194 197 201 202 225 227 228
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 33 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 194 202 225 227
  Adding insn 50 to worklist
  Adding insn 48 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 189 190 192 193 202 225 227
  Adding insn 253 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 24 count 27 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 24 count 33 (  1.8)


SMS analysis phase
===================

SMS loop num: 3
SMS loop inner or !loop_outer
SMS loop num: 4 sms-11.c:26
SMS loop many exits sms-11.c:26
SMS loop num: 1 sms-11.c:16
SMS loop inner or !loop_outer
SMS loop num: 2 sms-11.c:17
SMS loop many BBs. sms-11.c:17

SMS transformation phase
=========================

changing bb of uid 356
  unscanned insn
scanning new insn with uid = 358.
changing bb of uid 360
  unscanned insn
scanning new insn with uid = 362.
scanning new insn with uid = 364.
Reordered sequence:
 2 bb 2  [500]
 3 bb 3  [2000]
 4 bb 4  [1600]
 5 bb 5  [8000]
 6 bb 6  [4000]
 7 bb 7  [8000]
 8 bb 8  [2000]
 9 bb 9  [1440]
 10 bb 10  [2000]
 11 compensation  [500]
 12 bb 12  [7937]
 13 bb 13  [3]
 14 bb 14  [7934]
 15 bb 15  [1984]
 16 compensation  [497]
 17 bb 17  [500]
 18 bb 18  [1987]
 19 bb 19  [497]
starting the processing of deferred insns
ending the processing of deferred insns


invert

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 154[fpscr0] 155[fpscr1]
;;  ref usage 	r0={2d} r1={1d} r2={2d} r3={2d} r4={4d,1u} r5={4d,1u} r6={4d,1u} r7={2d} r14={1d,19u} r15={1d,20u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,18u} r146={3d} r147={10d,8u} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,21u,4e} r154={9u} r155={2d} r189={2d,2u} r190={1d,2u} r191={1d,1u} r192={2d,2u} r193={2d,3u} r194={1d,4u,1e} r196={2d,2u} r197={2d,2u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={2d,2u} r202={2d,2u} r203={2d,1u} r207={1d,1u} r208={1d,1u} r214={1d,1u} r216={1d,1u} r220={1d,1u} r223={1d,1u} r225={1d,5u} r226={2d,2u} r227={2d,2u} r228={3d,3u} 
;;    total ref usage 304{156d,143u,5e} in 56{55 regular + 1 call} insns.
(note 28 0 36 NOTE_INSN_DELETED)
(note 36 28 29 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 29 36 39 2 NOTE_INSN_FUNCTION_BEG)
(insn 39 29 41 2 (parallel [
            (set (reg/f:SI 225)
                (plus:SI (reg/f:SI 153 sfp)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (scratch:SI))
        ]) sms-11.c:12 64 {addsi3_scr}
     (nil))
(insn 41 39 42 2 (set (reg/f:SI 214)
        (symbol_ref:SI ("__movmem") [flags 0x1])) sms-11.c:12 255 {movsi_ie}
     (nil))
(insn 42 41 43 2 (set (reg:SI 4 r4)
        (reg/f:SI 225)) sms-11.c:12 255 {movsi_ie}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 153 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 43 42 44 2 (set (reg:SI 5 r5)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x14260ba20 *.LC0>)) sms-11.c:12 255 {movsi_ie}
     (nil))
(insn 44 43 45 2 (set (reg:SI 6 r6)
        (const_int 16 [0x10])) sms-11.c:12 255 {movsi_ie}
     (nil))
(insn 45 44 46 2 (parallel [
            (set (mem:BLK (reg:SI 4 r4) [0  A8])
                (mem:BLK (reg:SI 5 r5) [0  A8]))
            (use (reg/f:SI 214))
            (use (reg:SI 6 r6))
            (clobber (reg:SI 146 pr))
            (clobber (reg:SI 147 t))
            (clobber (reg:SI 4 r4))
            (clobber (reg:SI 5 r5))
            (clobber (reg:SI 6 r6))
            (clobber (reg:SI 0 r0))
        ]) sms-11.c:12 429 {block_lump_real}
     (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_UNUSED (reg:SI 147 t)
                        (expr_list:REG_UNUSED (reg:SI 146 pr)
                            (expr_list:REG_UNUSED (reg:SI 6 r6)
                                (expr_list:REG_UNUSED (reg:SI 5 r5)
                                    (expr_list:REG_UNUSED (reg:SI 4 r4)
                                        (expr_list:REG_UNUSED (reg:SI 0 r0)
                                            (nil))))))))))))
(insn 46 45 30 2 (set (reg:SI 189 [ ivtmp.10 ])
        (reg/f:SI 225)) 255 {movsi_ie}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 153 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 30 46 31 2 (set (reg:SI 193 [ ivtmp.42 ])
        (reg/f:SI 225)) sms-11.c:12 255 {movsi_ie}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 153 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 31 30 32 2 (set (reg:SI 202 [ ivtmp.38 ])
        (reg/f:SI 225)) sms-11.c:12 255 {movsi_ie}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 153 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 32 31 253 2 (set (reg/v:SI 192 [ swap ])
        (const_int 0 [0])) sms-11.c:14 255 {movsi_ie}
     (nil))
(insn 253 32 84 2 (set (reg:SI 227)
        (const_int 4 [0x4])) sms-11.c:14 -1
     (nil))
(code_label 84 253 47 3 6 "" [1 uses])
(note 47 84 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 50 3 (set (reg/v:SI 194 [ swap ])
        (plus:SI (reg/v:SI 192 [ swap ])
            (const_int 1 [0x1]))) sms-11.c:16 66 {*addsi3}
     (nil))
(insn 50 48 51 3 (set (reg:SI 147 t)
        (eq:SI (reg/v:SI 194 [ swap ])
            (const_int 4 [0x4]))) sms-11.c:16 12 {cmpeqsi_t}
     (nil))
(jump_insn 51 50 52 3 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 68)
            (pc))) sms-11.c:16 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 68)
(note 52 51 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 4 (parallel [
            (set (reg:SF 191 [ D.1538 ])
                (mem:SF (reg:SI 193 [ ivtmp.42 ]) [1 MEM[base: _59, offset: 0B]+0 S4 A32]))
            (use (reg:SI 154 fpscr0))
            (clobber (scratch:SI))
        ]) 293 {movsf_ie}
     (expr_list:REG_DEAD (reg:SI 154 fpscr0)
        (nil)))
(insn 54 53 33 4 (set (reg:SI 201 [ ivtmp.29 ])
        (plus:SI (reg:SI 193 [ ivtmp.42 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 33 54 256 4 (set (reg/v:SI 197 [ swap ])
        (reg/v:SI 194 [ swap ])) sms-11.c:16 255 {movsi_ie}
     (nil))
(insn 256 33 257 4 (set (reg:SI 228)
        (neg:SI (reg/v:SI 194 [ swap ]))) sms-11.c:16 206 {negsi2}
     (nil))
(insn 257 256 64 4 (set (reg:SI 228)
        (plus:SI (reg:SI 228)
            (const_int 4 [0x4]))) sms-11.c:16 -1
     (expr_list:REG_EQUAL (minus:SI (const_int 4 [0x4])
            (reg/v:SI 194 [ swap ]))
        (nil)))
(code_label 64 257 55 5 4 "" [1 uses])
(note 55 64 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 5 (parallel [
            (set (reg:SF 216 [ MEM[base: _50, offset: 0B] ])
                (mem:SF (reg:SI 201 [ ivtmp.29 ]) [1 MEM[base: _50, offset: 0B]+0 S4 A32]))
            (use (reg:SI 154 fpscr0))
            (clobber (scratch:SI))
        ]) sms-11.c:17 293 {movsf_ie}
     (nil))
(insn 57 56 58 5 (parallel [
            (set (reg:SI 147 t)
                (gt:SI (reg:SF 216 [ MEM[base: _50, offset: 0B] ])
                    (reg:SF 191 [ D.1538 ])))
            (clobber (reg:SI 155 fpscr1))
            (use (reg:SI 154 fpscr0))
        ]) sms-11.c:17 458 {cmpgtsf_t}
     (expr_list:REG_DEAD (reg:SF 216 [ MEM[base: _50, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_UNUSED (reg:SI 155 fpscr1)
                (nil)))))
(jump_insn 58 57 131 5 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 60)
            (pc))) sms-11.c:17 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 60)
(note 131 58 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 131 60 6 (set (reg/v:SI 190 [ swap ])
        (reg/v:SI 197 [ swap ])) 255 {movsi_ie}
     (nil))
(code_label 60 34 61 7 3 "" [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/v:SI 197 [ swap ])
        (plus:SI (reg/v:SI 197 [ swap ])
            (const_int 1 [0x1]))) sms-11.c:16 66 {*addsi3}
     (nil))
(insn 63 62 351 7 (set (reg:SI 201 [ ivtmp.29 ])
        (plus:SI (reg:SI 201 [ ivtmp.29 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 351 63 352 7 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 228)
                    (const_int 1 [0x1])))
            (set (reg:SI 228)
                (plus:SI (reg:SI 228)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-11.c:16 -1
     (nil))
(jump_insn 352 351 68 7 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) sms-11.c:16 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 64)
(code_label 68 352 69 8 2 "" [1 uses])
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg:SI 147 t)
        (eq:SI (reg/v:SI 190 [ swap ])
            (reg/v:SI 192 [ swap ]))) sms-11.c:20 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg/v:SI 192 [ swap ])
        (nil)))
(jump_insn 71 70 72 8 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) sms-11.c:20 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 79)
(note 72 71 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 72 76 9 (set (reg:SI 220)
        (ashift:SI (reg/v:SI 190 [ swap ])
            (const_int 4 [0x4]))) sms-11.c:21 162 {ashlsi3_n}
     (nil))
(note 76 75 77 9 NOTE_INSN_DELETED)
(insn 77 76 78 9 (parallel [
            (set (reg:SF 198 [ D.1538 ])
                (mem:SF (plus:SI (reg/f:SI 225)
                        (reg:SI 220)) [1 tmp S4 A32]))
            (use (reg:SI 154 fpscr0))
            (clobber (scratch:SI))
        ]) sms-11.c:21 293 {movsf_ie}
     (expr_list:REG_DEAD (reg:SI 220)
        (nil)))
(insn 78 77 79 9 (parallel [
            (set (mem:SF (reg:SI 202 [ ivtmp.38 ]) [1 MEM[base: _57, offset: 0B]+0 S4 A32])
                (reg:SF 198 [ D.1538 ]))
            (use (reg:SI 154 fpscr0))
            (clobber (scratch:SI))
        ]) sms-11.c:21 293 {movsf_ie}
     (expr_list:REG_DEAD (reg:SF 198 [ D.1538 ])
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (nil))))
(code_label 79 78 80 10 5 "" [1 uses])
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:SI 202 [ ivtmp.38 ])
        (plus:SI (reg:SI 202 [ ivtmp.38 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 82 81 83 10 (set (reg:SI 193 [ ivtmp.42 ])
        (plus:SI (reg:SI 193 [ ivtmp.42 ])
            (const_int 20 [0x14]))) 66 {*addsi3}
     (nil))
(insn 83 82 349 10 (set (reg/v:SI 192 [ swap ])
        (reg/v:SI 194 [ swap ])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/v:SI 194 [ swap ])
        (nil)))
(insn 349 83 350 10 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 227)
                    (const_int 1 [0x1])))
            (set (reg:SI 227)
                (plus:SI (reg:SI 227)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-11.c:14 -1
     (nil))
(jump_insn 350 349 356 10 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) sms-11.c:14 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 7500 (nil)))
 -> 84)
(note 356 350 358 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 358 356 359 11 (set (pc)
        (label_ref 357)) -1
     (nil)
 -> 357)
(barrier 359 358 104)
(code_label 104 359 91 12 9 "" [2 uses])
(note 91 104 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 94 12 (parallel [
            (set (reg:SF 199 [ D.1538 ])
                (mem:SF (post_inc:SI (reg:SI 189 [ ivtmp.10 ])) [1 MEM[base: _45, offset: 0B]+0 S4 A32]))
            (use (reg:SI 154 fpscr0))
            (clobber (scratch:SI))
        ]) sms-11.c:26 293 {movsf_ie}
     (expr_list:REG_INC (reg:SI 189 [ ivtmp.10 ])
        (nil)))
(insn 94 92 96 12 (parallel [
            (set (reg:SF 200 [ D.1538 ])
                (mem:SF (post_inc:SI (reg:SI 203 [ ivtmp.14 ])) [1 MEM[base: _46, offset: 0B]+0 S4 A32]))
            (use (reg:SI 154 fpscr0))
            (clobber (scratch:SI))
        ]) sms-11.c:26 293 {movsf_ie}
     (expr_list:REG_INC (reg:SI 203 [ ivtmp.14 ])
        (nil)))
(insn 96 94 97 12 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SF 199 [ D.1538 ])
                    (reg:SF 200 [ D.1538 ])))
            (clobber (reg:SI 155 fpscr1))
            (use (reg:SI 154 fpscr0))
        ]) sms-11.c:26 459 {cmpeqsf_t}
     (expr_list:REG_DEAD (reg:SF 200 [ D.1538 ])
        (expr_list:REG_DEAD (reg:SF 199 [ D.1538 ])
            (expr_list:REG_DEAD (reg:SI 154 fpscr0)
                (expr_list:REG_UNUSED (reg:SI 155 fpscr1)
                    (nil))))))
(jump_insn 97 96 98 12 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) sms-11.c:26 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 102)
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (set (reg/f:SI 223)
        (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)) sms-11.c:27 255 {movsi_ie}
     (nil))
(call_insn 100 99 101 13 (parallel [
            (call (mem:SI (reg/f:SI 223) [0 __builtin_abort S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-11.c:27 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 223)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (nil))
(barrier 101 100 102)
(code_label 102 101 103 14 8 "" [1 uses])
(note 103 102 347 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 347 103 348 14 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 226)
                    (const_int 1 [0x1])))
            (set (reg:SI 226)
                (plus:SI (reg:SI 226)
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-11.c:25 -1
     (nil))
(jump_insn 348 347 107 14 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) sms-11.c:25 -1
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 7499 (nil)))
 -> 104)
(note 107 348 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 110 15 (set (reg:SI 196 [ ivtmp.25 ])
        (plus:SI (reg:SI 196 [ ivtmp.25 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 110 108 111 15 (set (reg:SI 147 t)
        (eq:SI (reg/f:SI 207 [ D.1540 ])
            (reg:SI 208 [ D.1540 ]))) sms-11.c:24 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 208 [ D.1540 ])
        (nil)))
(jump_insn 111 110 360 15 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 120)
            (pc))) sms-11.c:24 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 7496 (nil)))
 -> 120)
(note 360 111 362 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 362 360 363 16 (set (pc)
        (label_ref 361)) -1
     (nil)
 -> 361)
(barrier 363 362 357)
(code_label 357 363 116 17 22 "" [1 uses])
(note 116 357 117 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 119 17 (set (reg:SI 196 [ ivtmp.25 ])
        (symbol_ref:SI ("out") [flags 0x2]  <var_decl 0x14260b630 out>)) 255 {movsi_ie}
     (nil))
(insn 119 117 120 17 (set (reg/f:SI 207 [ D.1540 ])
        (reg/f:SI 153 sfp)) 255 {movsi_ie}
     (nil))
(code_label 120 119 121 18 10 "" [1 uses])
(note 121 120 122 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 35 18 (set (reg:SI 208 [ D.1540 ])
        (plus:SI (reg:SI 189 [ ivtmp.10 ])
            (const_int 16 [0x10]))) 66 {*addsi3}
     (nil))
(insn 35 122 251 18 (set (reg:SI 203 [ ivtmp.14 ])
        (reg:SI 196 [ ivtmp.25 ])) 255 {movsi_ie}
     (nil))
(insn 251 35 364 18 (set (reg:SI 226)
        (const_int 4 [0x4])) -1
     (nil))
(jump_insn 364 251 365 18 (set (pc)
        (label_ref 104)) -1
     (nil)
 -> 104)
(barrier 365 364 361)
(code_label 361 365 128 19 23 "" [1 uses])
(note 128 361 0 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

;; Function main (main, funcdef_no=1, decl_uid=1476, cgraph_uid=1, symbol_order=2) (executed once)



try_optimize_cfg iteration 1

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Reordered sequence:
 2 bb 2  [10000]
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 15[r15] 146[pr] 154[fpscr0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r14={1d,2u} r15={1d,3u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,1u} r146={2d} r147={1d} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,2u} r154={1u} r163={1d,1u} 
;;    total ref usage 116{103d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 163)
        (symbol_ref:SI ("invert") [flags 0x3]  <function_decl 0x1426e9870 invert>)) sms-11.c:33 255 {movsi_ie}
     (nil))
(call_insn/c/i 6 5 11 2 (parallel [
            (call (mem:SI (reg/f:SI 163) [0 invert S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-11.c:33 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("invert") [flags 0x3]  <function_decl 0x1426e9870 invert>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(insn 11 6 12 2 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) sms-11.c:35 255 {movsi_ie}
     (nil))
(insn 12 11 0 2 (use (reg/i:SI 0 r0)) sms-11.c:35 -1
     (nil))
