
;; Function foo (foo, funcdef_no=0, decl_uid=1457, cgraph_uid=0, symbol_order=0)



try_optimize_cfg iteration 1

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 7 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 6 }
;; 6 succs { 8 7 }
;; 7 succs { }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 10 (  1.1)


foo

Dataflow summary:
def_info->table_size = 133, use_info->table_size = 85
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 1 [r1] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 148[mach] 149[macl] 154[fpscr0]
;;  ref usage 	r0={2d,2u} r1={2d,2u} r2={2d} r3={2d} r4={2d,1u} r5={2d,1u} r6={2d,1u} r7={2d} r14={1d,8u} r15={1d,9u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,7u} r146={2d} r147={5d,4u} r148={3d,2u} r149={6d,5u} r150={1d} r151={1d,1u} r152={1d} r153={1d,8u} r154={1u} r166={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,2u} r171={1d,1u} r173={1d,1u} r180={1d,1u} r185={1d,1u} r186={2d,2u} r187={3d,2u} r188={2d,5u} r189={3d,3u} r190={2d,8u} 
;;    total ref usage 218{135d,83u,0e} in 37{36 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(2){ }d7(3){ }d9(4){ }d11(5){ }d13(6){ }d15(7){ }d16(14){ }d17(15){ }d47(68){ }d49(69){ }d51(70){ }d53(71){ }d55(72){ }d57(73){ }d59(74){ }d61(75){ }d93(145){ }d95(146){ }d113(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 151 [] 154 [fpscr0]
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(14){ }u1(15){ }u2(145){ }u3(153){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 147 [t] 166 189 190
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 147 [t] 165 166
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 166 189 190
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 165 166

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(14){ }u10(15){ }u11(145){ }u12(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 166 189 190
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 166
;; lr  def 	 186 187 188
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 165 166
;; live  gen 	 163 186
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 186 187 188 189 190
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 165 186

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(14){ }u15(15){ }u16(145){ }u17(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 186 187 188 189 190
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 186 187 188 189 190
;; lr  def 	 147 [t] 148 [mach] 149 [macl] 167 168 169 170 171 173 186 187 188 189 190
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 165 186
;; live  gen 	 147 [t] 148 [mach] 149 [macl] 163 165 167 168 169 170 171 173 186
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 170 186 187 188 189 190
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 165 170 186

( 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u51(14){ }u52(15){ }u53(145){ }u54(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 170 188
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 170
;; lr  def 	 147 [t] 185
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 170
;; live  gen 	 147 [t] 185
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 185 188
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 185

( 5 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(14){ }u58(15){ }u59(145){ }u60(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 185 188
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 185 188
;; lr  def 	 147 [t]
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163 185
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 188
;; live  out 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163

( 6 2 5 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u65(14){ }u66(15){ }u67(145){ }u68(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap] 180
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 180
;; live  kill	 146 [pr]
;; lr  out 	 15 [r15] 145 [ap] 153 [sfp]
;; live  out 	 15 [r15] 145 [ap] 153 [sfp]

( 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(14){ }u73(15){ }u74(145){ }u75(153){ }}
;; lr  in  	 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 188
;; lr  use 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 188
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 163
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 0 [r0] 1 [r1] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u79(0){ }u80(1){ }u81(14){ }u82(15){ }u83(151){ }u84(153){ }}
;; lr  in  	 0 [r0] 1 [r1] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 223 to worklist
  Adding insn 39 to worklist
  Adding insn 43 to worklist
  Adding insn 48 to worklist
  Adding insn 58 to worklist
Finished finding needed instructions:
processing block 7 lr out =  15 [r15] 145 [ap] 153 [sfp]
  Adding insn 47 to worklist
processing block 8 lr out =  0 [r0] 1 [r1] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 6 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 188
  Adding insn 42 to worklist
processing block 5 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 185 188
  Adding insn 38 to worklist
  Adding insn 64 to worklist
processing block 4 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 170 186 187 188 189 190
  Adding insn 222 to worklist
  Adding insn 28 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 215 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 3 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 186 187 188 189 190
  Adding insn 101 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
processing block 2 lr out =  14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 166 189 190
  Adding insn 8 to worklist
  Adding insn 3 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 10 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 10 (  1.1)


SMS analysis phase
===================

SMS loop num: 1 sms-8.c:18
SMS doloop_register_get failed

SMS transformation phase
=========================

Reordered sequence:
 2 bb 2  [900]
 3 bb 3  [819]
 4 bb 4  [9100]
 5 bb 5  [819]
 6 bb 6  [238]
 7 bb 7  [0]
 8 bb 8  [900]
starting the processing of deferred insns
ending the processing of deferred insns


foo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 1 [r1] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 147[t] 148[mach] 149[macl] 154[fpscr0]
;;  ref usage 	r0={2d,2u} r1={2d,2u} r2={2d} r3={2d} r4={2d,1u} r5={2d,1u} r6={2d,1u} r7={2d} r14={1d,8u} r15={1d,9u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,7u} r146={2d} r147={5d,4u} r148={3d,2u} r149={6d,5u} r150={1d} r151={1d,1u} r152={1d} r153={1d,8u} r154={1u} r166={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,2u} r171={1d,1u} r173={1d,1u} r180={1d,1u} r185={1d,1u} r186={2d,2u} r187={3d,2u} r188={2d,5u} r189={3d,3u} r190={2d,8u} 
;;    total ref usage 218{135d,83u,0e} in 37{36 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 224 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 224 6 225 2 (set (reg:SI 189 [ ixi ])
        (reg:SI 4 r4 [ ixi ])) sms-8.c:14 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 4 r4 [ ixi ])
        (nil)))
(insn 225 224 3 2 (set (reg:SI 190 [ ixi+4 ])
        (reg:SI 5 r5 [orig:4 ixi+4 ] [4])) sms-8.c:14 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 5 r5 [orig:4 ixi+4 ] [4])
        (nil)))
(insn 3 225 4 2 (set (reg/v:SI 166 [ ctr ])
        (reg:SI 6 r6 [ ctr ])) sms-8.c:14 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 6 r6 [ ctr ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:SI 147 t)
        (eq:SI (reg/v:SI 166 [ ctr ])
            (const_int 0 [0]))) sms-8.c:18 12 {cmpeqsi_t}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 45)
            (pc))) sms-8.c:18 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 45)
(note 10 9 226 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 226 10 227 3 (set (reg:SI 187 [ irslt ])
        (const_int 0 [0])) sms-8.c:18 255 {movsi_ie}
     (nil))
(insn 227 226 101 3 (set (reg:SI 188 [ irslt+4 ])
        (const_int 1 [0x1])) sms-8.c:18 255 {movsi_ie}
     (nil))
(insn 101 227 31 3 (set (reg:SI 186 [ ctr ])
        (reg/v:SI 166 [ ctr ])) sms-8.c:18 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/v:SI 166 [ ctr ])
        (nil)))
(code_label 31 101 11 4 3 "" [1 uses])
(note 11 31 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 187 [ irslt ])
            (reg:SI 190 [ ixi+4 ]))) sms-8.c:20 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 187 [ irslt ])
        (nil)))
(insn 13 12 14 4 (set (reg:SI 167)
        (reg:SI 149 macl)) sms-8.c:20 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 14 13 15 4 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 189 [ ixi ])
            (reg:SI 188 [ irslt+4 ]))) sms-8.c:20 108 {mul_l}
     (nil))
(insn 15 14 16 4 (set (reg:SI 168)
        (reg:SI 149 macl)) sms-8.c:20 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 16 15 213 4 (set (reg:SI 169)
        (plus:SI (reg:SI 167)
            (reg:SI 168))) sms-8.c:20 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg:SI 167)
            (nil))))
(insn 213 16 214 4 (parallel [
            (set (reg:SI 148 mach)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 188 [ irslt+4 ]))
                            (zero_extend:DI (reg:SI 190 [ ixi+4 ])))
                        (const_int 32 [0x20]))))
            (set (reg:SI 149 macl)
                (mult:SI (reg:SI 188 [ irslt+4 ])
                    (reg:SI 190 [ ixi+4 ])))
        ]) sms-8.c:20 112 {umulsidi3_i}
     (expr_list:REG_DEAD (reg:SI 188 [ irslt+4 ])
        (nil)))
(insn 214 213 215 4 (set (reg:SI 188 [ irslt+4 ])
        (reg:SI 149 macl)) sms-8.c:20 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 215 214 18 4 (set (reg:SI 187 [ irslt ])
        (reg:SI 148 mach)) sms-8.c:20 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 148 mach)
        (nil)))
(insn 18 215 19 4 (parallel [
            (set (reg:SI 170)
                (plus:SI (reg:SI 169)
                    (reg:SI 187 [ irslt ])))
            (clobber (scratch:SI))
        ]) sms-8.c:20 64 {addsi3_scr}
     (expr_list:REG_DEAD (reg:SI 187 [ irslt ])
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))
(insn 19 18 21 4 (set (reg:SI 187 [ irslt ])
        (reg:SI 170)) sms-8.c:20 255 {movsi_ie}
     (nil))
(insn 21 19 22 4 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 189 [ ixi ])
            (reg:SI 190 [ ixi+4 ]))) sms-8.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 189 [ ixi ])
        (nil)))
(insn 22 21 25 4 (set (reg:SI 171)
        (reg:SI 149 macl)) sms-8.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 25 22 217 4 (set (reg:SI 173)
        (ashift:SI (reg:SI 171)
            (const_int 1 [0x1]))) sms-8.c:21 159 {ashlsi3_k}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 217 25 218 4 (parallel [
            (set (reg:SI 148 mach)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 190 [ ixi+4 ]))
                            (zero_extend:DI (reg:SI 190 [ ixi+4 ])))
                        (const_int 32 [0x20]))))
            (set (reg:SI 149 macl)
                (mult:SI (reg:SI 190 [ ixi+4 ])
                    (reg:SI 190 [ ixi+4 ])))
        ]) sms-8.c:21 112 {umulsidi3_i}
     (expr_list:REG_DEAD (reg:SI 190 [ ixi+4 ])
        (nil)))
(insn 218 217 219 4 (set (reg:SI 190 [ ixi+4 ])
        (reg:SI 149 macl)) sms-8.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 219 218 27 4 (set (reg:SI 189 [ ixi ])
        (reg:SI 148 mach)) sms-8.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 148 mach)
        (nil)))
(note 27 219 28 4 NOTE_INSN_DELETED)
(insn 28 27 222 4 (parallel [
            (set (reg:SI 189 [ ixi ])
                (plus:SI (reg:SI 173)
                    (reg:SI 189 [ ixi ])))
            (clobber (scratch:SI))
        ]) sms-8.c:21 64 {addsi3_scr}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(insn 222 28 223 4 (parallel [
            (set (reg:SI 147 t)
                (eq:SI (reg:SI 186 [ ctr ])
                    (const_int 1 [0x1])))
            (set (reg:SI 186 [ ctr ])
                (plus:SI (reg:SI 186 [ ctr ])
                    (const_int -1 [0xffffffffffffffff])))
        ]) sms-8.c:18 347 {dect}
     (nil))
(jump_insn 223 222 34 4 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) sms-8.c:18 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 31)
(note 34 223 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 34 38 5 (set (reg:SI 185 [+4 ])
        (const_int 14348907 [0xdaf26b])) sms-8.c:24 255 {movsi_ie}
     (nil))
(insn 38 64 39 5 (set (reg:SI 147 t)
        (eq:SI (reg:SI 170)
            (const_int 0 [0]))) sms-8.c:24 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 170)
        (nil)))
(jump_insn 39 38 60 5 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 45)
            (pc))) sms-8.c:24 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 45)
(note 60 39 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 60 43 6 (set (reg:SI 147 t)
        (eq:SI (reg:SI 188 [ irslt+4 ])
            (reg:SI 185 [+4 ]))) sms-8.c:24 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 185 [+4 ])
        (nil)))
(jump_insn 43 42 45 6 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) sms-8.c:24 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 50)
(code_label 45 43 46 7 2 "" [2 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:SI 180)
        (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)) sms-8.c:25 255 {movsi_ie}
     (nil))
(call_insn 48 47 49 7 (parallel [
            (call (mem:SI (reg/f:SI 180) [0 __builtin_abort S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-8.c:25 314 {calli}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (nil))
(barrier 49 48 50)
(code_label 50 49 51 8 4 "" [1 uses])
(note 51 50 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 51 57 8 (set (reg:SI 1 r1)
        (reg:SI 188 [ irslt+4 ])) sms-8.c:27 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 188 [ irslt+4 ])
        (expr_list:REG_EQUAL (const_int 14348907 [0xdaf26b])
            (nil))))
(insn 57 56 58 8 (set (reg:SI 0 r0)
        (const_int 0 [0])) sms-8.c:27 255 {movsi_ie}
     (nil))
(insn 58 57 0 8 (use (reg/i:DI 0 r0)) sms-8.c:27 -1
     (nil))

;; Function main (main, funcdef_no=1, decl_uid=1464, cgraph_uid=1, symbol_order=1) (executed once)



try_optimize_cfg iteration 1

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Reordered sequence:
 2 bb 2  [10000]
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 5[r5] 6[r6] 15[r15] 146[pr] 154[fpscr0]
;;  ref usage 	r0={2d,2u} r1={2d} r2={2d} r3={2d} r4={3d,1u} r5={3d,1u} r6={3d,1u} r7={2d} r14={1d,2u} r15={1d,3u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,1u} r146={2d} r147={1d} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,2u} r154={1u} r163={1d,1u} 
;;    total ref usage 123{107d,16u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 163)
        (symbol_ref:SI ("foo") [flags 0x3]  <function_decl 0x1426e9870 foo>)) sms-8.c:35 255 {movsi_ie}
     (nil))
(insn 6 5 7 2 (set (reg:SI 6 r6)
        (const_int 4 [0x4])) sms-8.c:35 255 {movsi_ie}
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 r4)
        (const_int 3 [0x3])) sms-8.c:35 277 {*movdi_i}
     (nil))
(call_insn/c/i 8 7 13 2 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (reg/f:SI 163) [0 foo S4 A32])
                    (const_int 0 [0])))
            (use (reg:SI 154 fpscr0))
            (clobber (reg:SI 146 pr))
        ]) sms-8.c:35 321 {call_valuei}
     (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_DEAD (reg:SI 154 fpscr0)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:DI 4 r4)
                    (expr_list:REG_UNUSED (reg:DI 0 r0)
                        (expr_list:REG_CALL_DECL (symbol_ref:SI ("foo") [flags 0x3]  <function_decl 0x1426e9870 foo>)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 4 r4))
        (expr_list:SI (use (reg:SI 6 r6))
            (nil))))
(insn 13 8 14 2 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) sms-8.c:37 255 {movsi_ie}
     (nil))
(insn 14 13 0 2 (use (reg/i:SI 0 r0)) sms-8.c:37 -1
     (nil))
