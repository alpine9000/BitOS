
;; Function foo (foo, funcdef_no=0, decl_uid=1461, cgraph_uid=0, symbol_order=2)



try_optimize_cfg iteration 1

Redirecting fallthru edge 2->3 to 5
deleting insn with uid = 1163.
deleting block 3
Redirecting fallthru edge 21->22 to 5
deleting insn with uid = 1166.
deleting block 22


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

changing bb of uid 1175
  unscanned insn
changing bb of uid 609
  from 4 to 23
changing bb of uid 72
  from 4 to 23
changing bb of uid 607
  from 4 to 23
changing bb of uid 73
  from 4 to 23
changing bb of uid 74
  from 4 to 23
changing bb of uid 75
  from 4 to 23
changing bb of uid 76
  from 4 to 23
changing bb of uid 293
  from 4 to 23
changing bb of uid 294
  from 4 to 23
changing bb of uid 295
  from 4 to 23
changing bb of uid 296
  from 4 to 23
changing bb of uid 297
  from 4 to 23
changing bb of uid 307
  from 4 to 23
changing bb of uid 308
  from 4 to 23
changing bb of uid 309
  from 4 to 23
changing bb of uid 310
  from 4 to 23
changing bb of uid 311
  from 4 to 23
changing bb of uid 321
  from 4 to 23
changing bb of uid 322
  from 4 to 23
changing bb of uid 323
  from 4 to 23
changing bb of uid 324
  from 4 to 23
changing bb of uid 325
  from 4 to 23
changing bb of uid 335
  from 4 to 23
changing bb of uid 336
  from 4 to 23
changing bb of uid 337
  from 4 to 23
changing bb of uid 338
  from 4 to 23
changing bb of uid 339
  from 4 to 23
changing bb of uid 349
  from 4 to 23
changing bb of uid 350
  from 4 to 23
changing bb of uid 351
  from 4 to 23
changing bb of uid 352
  from 4 to 23
changing bb of uid 353
  from 4 to 23
changing bb of uid 363
  from 4 to 23
changing bb of uid 364
  from 4 to 23
changing bb of uid 365
  from 4 to 23
changing bb of uid 366
  from 4 to 23
changing bb of uid 367
  from 4 to 23
changing bb of uid 377
  from 4 to 23
changing bb of uid 378
  from 4 to 23
changing bb of uid 379
  from 4 to 23
changing bb of uid 380
  from 4 to 23
changing bb of uid 381
  from 4 to 23
changing bb of uid 382
  from 4 to 23
changing bb of uid 383
  from 4 to 23
changing bb of uid 384
  from 4 to 23
changing bb of uid 385
  from 4 to 23
verify found no changes in insn with uid = 385.
Edge 23->4 redirected to 23
Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 4 23 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 23, latch 23
;;  depth 1, outer 0
;;  nodes: 23
;; 2 succs { 8 5 }
;; 4 succs { 23 }
;; 23 succs { 23 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 1 }
;; 8 succs { 9 4 }
;; 9 succs { 10 21 }
;; 10 succs { 11 20 }
;; 11 succs { 12 19 }
;; 12 succs { 13 18 }
;; 13 succs { 14 17 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 4 5 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 23 (    1)


foo

Dataflow summary:
def_info->table_size = 234, use_info->table_size = 309
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 12 [r12] 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [r12] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 5[r5] 12[r12] 15[r15] 146[pr] 147[t] 149[macl] 154[fpscr0]
;;  ref usage 	r0={3d,2u} r1={1d} r2={2d} r3={2d} r4={2d} r5={2d,1u} r6={2d} r7={2d} r12={1d,24u} r14={1d,21u} r15={1d,22u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,20u} r146={2d} r147={12d,11u} r148={1d} r149={17d,16u} r150={1d} r151={1d,1u} r152={1d} r153={1d,21u} r154={1u} r207={1d,2u} r214={1d,3u} r215={1d,1u} r219={1d,1u} r222={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r235={1d,7u} r242={2d,2u} r243={2d,2u} r244={9d,9u,1e} r245={10d,19u,2e} r246={10d,16u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} 
;;    total ref usage 488{226d,259u,3e} in 119{118 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(2){ }d7(3){ }d9(4){ }d11(5){ }d13(6){ }d15(7){ }d16(12){ }d17(14){ }d18(15){ }d48(68){ }d50(69){ }d52(70){ }d54(71){ }d56(72){ }d58(73){ }d60(74){ }d62(75){ }d94(145){ }d96(146){ }d130(153){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 151 [] 154 [fpscr0]
;; lr  use 	
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [r12] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  in  	
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [r12] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;; live  kill	
;; lr  out 	 5 [r5] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
;; live  out 	 5 [r5] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 0 )->[2]->( 8 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(12){ }u1(14){ }u2(15){ }u3(145){ }u4(153){ }}
;; lr  in  	 5 [r5] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
;; lr  use 	 5 [r5] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 147 [t] 149 [macl] 207 214 219 222 228 229 230 235 244 245 246
;; live  in  	 5 [r5] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 147 [t] 149 [macl] 207 214 219 222 228 229 230 235 244 245 246
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246

( 21 8 )->[4]->( 23 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(12){ }u34(14){ }u35(15){ }u36(145){ }u37(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 147 [t] 149 [macl] 242 243 244 245 246 247 248 249 250 253 254 255 256 259 260 261 262 265 266 267 268 271 272 273 274 277 278 279 280 283 284 285 286 289 290 291
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 4 23 )->[23]->( 23 5 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(12){ }u-1(14){ }u-1(15){ }u-1(145){ }u-1(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; lr  def 	 147 [t] 149 [macl] 242 243 244 245 246 247 248 249 250 253 254 255 256 259 260 261 262 265 266 267 268 271 272 273 274 277 278 279 280 283 284 285 286 289 290 291
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	

( 23 2 21 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u114(12){ }u115(14){ }u116(15){ }u117(145){ }u118(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 244
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244
;; lr  def 	 147 [t] 231
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244
;; live  gen 	 147 [t] 231
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 5 )->[6]->( )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u123(12){ }u124(14){ }u125(15){ }u126(145){ }u127(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 154 [fpscr0]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	
;; live  kill	 146 [pr]
;; lr  out 	 12 [r12] 15 [r15] 145 [ap] 153 [sfp]
;; live  out 	 12 [r12] 15 [r15] 145 [ap] 153 [sfp]

( 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u131(12){ }u132(14){ }u133(15){ }u134(145){ }u135(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; lr  def 	 0 [r0] 215
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;; live  gen 	 0 [r0]
;; live  kill	 0 [r0] 215
;; lr  out 	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
;; live  out 	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]

( 2 )->[8]->( 9 4 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(12){ }u139(14){ }u140(15){ }u141(145){ }u142(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 235
;; lr  def 	 147 [t]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246

( 8 )->[9]->( 10 21 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u145(12){ }u146(14){ }u147(15){ }u148(145){ }u149(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 235
;; lr  def 	 147 [t]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246

( 9 )->[10]->( 11 20 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(12){ }u153(14){ }u154(15){ }u155(145){ }u156(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 235
;; lr  def 	 147 [t]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246

( 10 )->[11]->( 12 19 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u159(12){ }u160(14){ }u161(15){ }u162(145){ }u163(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 235
;; lr  def 	 147 [t]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246

( 11 )->[12]->( 13 18 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u166(12){ }u167(14){ }u168(15){ }u169(145){ }u170(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 235
;; lr  def 	 147 [t]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246

( 12 )->[13]->( 14 17 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u173(12){ }u174(14){ }u175(15){ }u176(145){ }u177(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 235
;; lr  def 	 147 [t]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246

( 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u180(12){ }u181(14){ }u182(15){ }u183(145){ }u184(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 235
;; lr  def 	 147 [t]
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 235 244 245 246
;; live  gen 	 147 [t]
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u187(12){ }u188(14){ }u189(15){ }u190(145){ }u191(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244 245 246
;; lr  def 	 149 [macl] 244 245 246 292 293 294
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 149 [macl] 244 245 246 292 293 294
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 15 14 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u201(12){ }u202(14){ }u203(15){ }u204(145){ }u205(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244 245 246
;; lr  def 	 149 [macl] 244 245 246 295 296 297
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 149 [macl] 244 245 246 295 296 297
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 16 13 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u215(12){ }u216(14){ }u217(15){ }u218(145){ }u219(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244 245 246
;; lr  def 	 149 [macl] 244 245 246 298 299 300
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 149 [macl] 244 245 246 298 299 300
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 17 12 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u229(12){ }u230(14){ }u231(15){ }u232(145){ }u233(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244 245 246
;; lr  def 	 149 [macl] 244 245 246 301 302 303
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 149 [macl] 244 245 246 301 302 303
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 18 11 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u243(12){ }u244(14){ }u245(15){ }u246(145){ }u247(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244 245 246
;; lr  def 	 149 [macl] 244 245 246 304 305 306
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 149 [macl] 244 245 246 304 305 306
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 19 10 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u257(12){ }u258(14){ }u259(15){ }u260(145){ }u261(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 244 245 246
;; lr  def 	 149 [macl] 244 245 246 307 308 309
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 149 [macl] 244 245 246 307 308 309
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 20 9 )->[21]->( 4 5 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u271(12){ }u272(14){ }u273(15){ }u274(145){ }u275(153){ }}
;; lr  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; lr  use 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; lr  def 	 147 [t] 149 [macl] 244 245 246 310 311 312
;; live  in  	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246
;; live  gen 	 147 [t] 149 [macl] 244 245 246 310 311 312
;; live  kill	
;; lr  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
;; live  out 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp] 214 244 245 246

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u289(0){ }u290(12){ }u291(14){ }u292(15){ }u293(151){ }u294(153){ }}
;; lr  in  	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  use 	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 153 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 147 to worklist
  Adding insn 385 to worklist
  Adding insn 85 to worklist
  Adding insn 87 to worklist
  Adding insn 95 to worklist
  Adding insn 93 to worklist
  Adding insn 290 to worklist
  Adding insn 271 to worklist
  Adding insn 251 to worklist
  Adding insn 231 to worklist
  Adding insn 211 to worklist
  Adding insn 191 to worklist
  Adding insn 171 to worklist
  Adding insn 282 to worklist
Finished finding needed instructions:
processing block 6 lr out =  12 [r12] 15 [r15] 145 [ap] 153 [sfp]
processing block 7 lr out =  0 [r0] 12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp]
  Adding insn 92 to worklist
  Adding insn 94 to worklist
processing block 5 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0]
  Adding insn 84 to worklist
  Adding insn 83 to worklist
processing block 23 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 384 to worklist
  Adding insn 383 to worklist
  Adding insn 382 to worklist
  Adding insn 381 to worklist
  Adding insn 380 to worklist
  Adding insn 379 to worklist
  Adding insn 378 to worklist
  Adding insn 377 to worklist
  Adding insn 367 to worklist
  Adding insn 366 to worklist
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 363 to worklist
  Adding insn 353 to worklist
  Adding insn 352 to worklist
  Adding insn 351 to worklist
  Adding insn 350 to worklist
  Adding insn 349 to worklist
  Adding insn 339 to worklist
  Adding insn 338 to worklist
  Adding insn 337 to worklist
  Adding insn 336 to worklist
  Adding insn 335 to worklist
  Adding insn 325 to worklist
  Adding insn 324 to worklist
  Adding insn 323 to worklist
  Adding insn 322 to worklist
  Adding insn 321 to worklist
  Adding insn 311 to worklist
  Adding insn 310 to worklist
  Adding insn 309 to worklist
  Adding insn 308 to worklist
  Adding insn 307 to worklist
  Adding insn 297 to worklist
  Adding insn 296 to worklist
  Adding insn 295 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 607 to worklist
  Adding insn 72 to worklist
  Adding insn 609 to worklist
processing block 4 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
processing block 21 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 281 to worklist
  Adding insn 278 to worklist
  Adding insn 277 to worklist
  Adding insn 276 to worklist
  Adding insn 275 to worklist
  Adding insn 274 to worklist
processing block 20 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
  Adding insn 254 to worklist
processing block 19 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 238 to worklist
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 235 to worklist
  Adding insn 234 to worklist
processing block 18 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 214 to worklist
processing block 17 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 194 to worklist
processing block 16 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
processing block 15 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
processing block 14 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 244 245 246
  Adding insn 170 to worklist
processing block 13 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
  Adding insn 190 to worklist
processing block 12 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
  Adding insn 210 to worklist
processing block 11 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
  Adding insn 230 to worklist
processing block 10 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
  Adding insn 250 to worklist
processing block 9 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
  Adding insn 270 to worklist
processing block 8 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
  Adding insn 289 to worklist
processing block 2 lr out =  12 [r12] 14 [r14] 15 [r15] 145 [ap] 151 [] 153 [sfp] 154 [fpscr0] 214 235 244 245 246
  Adding insn 146 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 603 to worklist
  Adding insn 139 to worklist
  Adding insn 605 to worklist
  Adding insn 136 to worklist
  Adding insn 133 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 23 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 23 (    1)


SMS analysis phase
===================

SMS loop num: 1 sms-12.c:20
SMS doloop_register_get failed

SMS transformation phase
=========================

changing bb of uid 1178
  unscanned insn
scanning new insn with uid = 1179.
changing bb of uid 1181
  unscanned insn
scanning new insn with uid = 1182.
Reordered sequence:
 2 bb 2  [100]
 3 compensation  [1]
 4 bb 4  [108]
 5 bb 23  [1213]
 6 bb 5  [100]
 7 bb 6  [0]
 8 bb 7  [100]
 9 bb 8  [84]
 10 bb 9  [82]
 11 bb 10  [78]
 12 bb 11  [74]
 13 bb 12  [65]
 14 bb 13  [49]
 15 bb 14  [98]
 16 bb 15  [98]
 17 bb 16  [98]
 18 bb 17  [98]
 19 bb 18  [98]
 20 bb 19  [98]
 21 bb 20  [98]
 22 bb 21  [98]
 23 compensation  [1]
starting the processing of deferred insns
ending the processing of deferred insns


foo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 12 [r12] 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [r12] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 5[r5] 12[r12] 15[r15] 146[pr] 147[t] 149[macl] 154[fpscr0]
;;  ref usage 	r0={3d,2u} r1={1d} r2={2d} r3={2d} r4={2d} r5={2d,1u} r6={2d} r7={2d} r12={1d,26u} r14={1d,23u} r15={1d,24u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,22u} r146={2d} r147={12d,11u} r148={1d} r149={17d,16u} r150={1d} r151={1d,1u} r152={1d} r153={1d,23u} r154={1u} r207={1d,2u} r214={1d,3u} r215={1d,1u} r219={1d,1u} r222={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r235={1d,7u} r242={2d,2u} r243={2d,2u} r244={9d,9u,1e} r245={10d,19u,2e} r246={10d,16u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} 
;;    total ref usage 498{226d,269u,3e} in 121{120 regular + 1 call} insns.
(note 52 0 56 NOTE_INSN_DELETED)
(note 56 52 54 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 54 56 55 2 NOTE_INSN_DELETED)
(note 55 54 58 2 NOTE_INSN_FUNCTION_BEG)
(insn 58 55 59 2 (set (reg/f:SI 219)
        (const:SI (unspec [
                    (symbol_ref:SI ("X")  <var_decl 0x14260b630 X>)
                ] UNSPEC_GOT))) 255 {movsi_ie}
     (nil))
(note 59 58 60 2 NOTE_INSN_DELETED)
(insn 60 59 62 2 (set (reg:SI 207 [ ivtmp.9 ])
        (mem/u/c:SI (plus:SI (reg/f:SI 219)
                (reg:SI 12 r12)) [0  S4 A32])) 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 219)
        (nil)))
(insn 62 60 63 2 (set (reg/f:SI 222)
        (const:SI (unspec [
                    (symbol_ref:SI ("Y")  <var_decl 0x14260b6c0 Y>)
                ] UNSPEC_GOT))) 255 {movsi_ie}
     (nil))
(note 63 62 64 2 NOTE_INSN_DELETED)
(note 64 63 69 2 NOTE_INSN_DELETED)
(note 69 64 70 2 NOTE_INSN_DELETED)
(note 70 69 133 2 NOTE_INSN_DELETED)
(insn 133 70 134 2 (parallel [
            (set (reg/f:SI 214 [ D.1501 ])
                (plus:SI (reg:SI 207 [ ivtmp.9 ])
                    (const_int 4000 [0xfa0])))
            (clobber (scratch:SI))
        ]) 64 {addsi3_scr}
     (nil))
(note 134 133 135 2 NOTE_INSN_DELETED)
(note 135 134 136 2 NOTE_INSN_DELETED)
(insn 136 135 605 2 (set (reg:SI 235)
        (const_int 7 [0x7])) 255 {movsi_ie}
     (nil))
(insn 605 136 139 2 (set (reg:SI 245 [ ivtmp.9 ])
        (reg:SI 207 [ ivtmp.9 ])) sms-12.c:21 -1
     (expr_list:REG_DEAD (reg:SI 207 [ ivtmp.9 ])
        (nil)))
(insn 139 605 603 2 (set (reg:SI 229 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 603 139 140 2 (set (reg:SI 246 [ ivtmp.11 ])
        (mem/u/c:SI (plus:SI (reg/f:SI 222)
                (reg:SI 12 r12)) [0  S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 222)
        (nil)))
(insn 140 603 141 2 (set (reg:SI 230 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 141 140 142 2 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 229 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 230 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 230 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 229 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 142 141 143 2 (set (reg:SI 228 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 143 142 146 2 (parallel [
            (set (reg/v:SI 244 [ a ])
                (plus:SI (reg:SI 5 r5 [ a ])
                    (reg:SI 228 [ D.1499 ])))
            (clobber (scratch:SI))
        ]) sms-12.c:21 64 {addsi3_scr}
     (expr_list:REG_DEAD (reg:SI 228 [ D.1499 ])
        (expr_list:REG_DEAD (reg:SI 5 r5 [ a ])
            (nil))))
(insn 146 143 147 2 (set (reg:SI 147 t)
        (eq:SI (reg:SI 245 [ ivtmp.9 ])
            (reg/f:SI 214 [ D.1501 ]))) sms-12.c:20 12 {cmpeqsi_t}
     (nil))
(jump_insn 147 146 1178 2 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 419)
            (pc))) sms-12.c:20 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 419)
(note 1178 147 1179 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1179 1178 1180 3 (set (pc)
        (label_ref 1162)) -1
     (nil)
 -> 1162)
(barrier 1180 1179 79)
(code_label 79 1180 71 4 2 "" [2 uses])
(note 71 79 1176 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 1176 71 1175 5 42 "" [1 uses])
(note 1175 1176 609 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 609 1175 72 5 (set (reg:SI 242)
        (reg:SI 245 [ ivtmp.9 ])) sms-12.c:21 -1
     (nil))
(insn 72 609 607 5 (set (reg:SI 247 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 242)) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 242)
        (nil)))
(insn 607 72 73 5 (set (reg:SI 243)
        (reg:SI 246 [ ivtmp.11 ])) sms-12.c:21 -1
     (nil))
(insn 73 607 74 5 (set (reg:SI 248 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 243)) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 243)
        (nil)))
(insn 74 73 75 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 247 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 248 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 248 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 247 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 75 74 76 5 (set (reg:SI 249 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 76 75 293 5 (set (reg/v:SI 250 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 249 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 249 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 244 [ a ])
            (nil))))
(insn 293 76 294 5 (set (reg:SI 253 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 245 [ ivtmp.9 ])
                (const_int 4 [0x4])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 294 293 295 5 (set (reg:SI 254 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 246 [ ivtmp.11 ])
                (const_int 4 [0x4])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 295 294 296 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 253 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 254 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 254 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 253 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 296 295 297 5 (set (reg:SI 255 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 297 296 307 5 (set (reg/v:SI 256 [ a ])
        (plus:SI (reg/v:SI 250 [ a ])
            (reg:SI 255 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 255 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 250 [ a ])
            (nil))))
(insn 307 297 308 5 (set (reg:SI 259 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 242)
                (const_int 4 [0x4])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 242)
        (nil)))
(insn 308 307 309 5 (set (reg:SI 260 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 243)
                (const_int 4 [0x4])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 243)
        (nil)))
(insn 309 308 310 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 259 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 260 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 260 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 259 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 310 309 311 5 (set (reg:SI 261 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 311 310 321 5 (set (reg/v:SI 262 [ a ])
        (plus:SI (reg/v:SI 256 [ a ])
            (reg:SI 261 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 261 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 256 [ a ])
            (nil))))
(insn 321 311 322 5 (set (reg:SI 265 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 245 [ ivtmp.9 ])
                (const_int 12 [0xc])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 322 321 323 5 (set (reg:SI 266 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 246 [ ivtmp.11 ])
                (const_int 12 [0xc])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 323 322 324 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 265 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 266 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 266 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 265 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 324 323 325 5 (set (reg:SI 267 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 325 324 335 5 (set (reg/v:SI 268 [ a ])
        (plus:SI (reg/v:SI 262 [ a ])
            (reg:SI 267 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 267 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 262 [ a ])
            (nil))))
(insn 335 325 336 5 (set (reg:SI 271 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 245 [ ivtmp.9 ])
                (const_int 16 [0x10])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 336 335 337 5 (set (reg:SI 272 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 246 [ ivtmp.11 ])
                (const_int 16 [0x10])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 337 336 338 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 271 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 272 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 272 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 271 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 338 337 339 5 (set (reg:SI 273 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 339 338 349 5 (set (reg/v:SI 274 [ a ])
        (plus:SI (reg/v:SI 268 [ a ])
            (reg:SI 273 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 273 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 268 [ a ])
            (nil))))
(insn 349 339 350 5 (set (reg:SI 277 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 245 [ ivtmp.9 ])
                (const_int 20 [0x14])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 350 349 351 5 (set (reg:SI 278 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 246 [ ivtmp.11 ])
                (const_int 20 [0x14])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 351 350 352 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 277 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 278 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 278 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 277 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 352 351 353 5 (set (reg:SI 279 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 353 352 363 5 (set (reg/v:SI 280 [ a ])
        (plus:SI (reg/v:SI 274 [ a ])
            (reg:SI 279 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 279 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 274 [ a ])
            (nil))))
(insn 363 353 364 5 (set (reg:SI 283 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 245 [ ivtmp.9 ])
                (const_int 24 [0x18])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 364 363 365 5 (set (reg:SI 284 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 246 [ ivtmp.11 ])
                (const_int 24 [0x18])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 365 364 366 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 283 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 284 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 284 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 283 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 366 365 367 5 (set (reg:SI 285 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 367 366 377 5 (set (reg/v:SI 286 [ a ])
        (plus:SI (reg/v:SI 280 [ a ])
            (reg:SI 285 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 285 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 280 [ a ])
            (nil))))
(insn 377 367 378 5 (set (reg:SI 289 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 245 [ ivtmp.9 ])
                (const_int 28 [0x1c])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 378 377 379 5 (set (reg:SI 290 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (plus:SI (reg:SI 246 [ ivtmp.11 ])
                (const_int 28 [0x1c])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (nil))
(insn 379 378 380 5 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 289 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 290 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 290 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 289 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 380 379 381 5 (set (reg:SI 291 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 381 380 382 5 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 286 [ a ])
            (reg:SI 291 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 291 [ D.1499 ])
        (expr_list:REG_DEAD (reg/v:SI 286 [ a ])
            (nil))))
(insn 382 381 383 5 (parallel [
            (set (reg:SI 245 [ ivtmp.9 ])
                (plus:SI (reg:SI 245 [ ivtmp.9 ])
                    (const_int 32 [0x20])))
            (clobber (scratch:SI))
        ]) 64 {addsi3_scr}
     (nil))
(insn 383 382 384 5 (parallel [
            (set (reg:SI 246 [ ivtmp.11 ])
                (plus:SI (reg:SI 246 [ ivtmp.11 ])
                    (const_int 32 [0x20])))
            (clobber (scratch:SI))
        ]) 64 {addsi3_scr}
     (nil))
(insn 384 383 385 5 (set (reg:SI 147 t)
        (eq:SI (reg:SI 245 [ ivtmp.9 ])
            (reg/f:SI 214 [ D.1501 ]))) sms-12.c:20 12 {cmpeqsi_t}
     (expr_list:REG_EQUAL (eq:SI (reg:SI 245 [ ivtmp.9 ])
            (const:SI (plus:SI (symbol_ref:SI ("X")  <var_decl 0x14260b630 X>)
                    (const_int 4000 [0xfa0]))))
        (nil)))
(jump_insn 385 384 1162 5 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 1176)
            (pc))) sms-12.c:20 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 1176)
(code_label 1162 385 82 6 41 "" [2 uses])
(note 82 1162 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 6 (set (reg:SI 231)
        (const_int 601 [0x259])) sms-12.c:23 255 {movsi_ie}
     (nil))
(insn 84 83 85 6 (set (reg:SI 147 t)
        (eq:SI (reg/v:SI 244 [ a ])
            (reg:SI 231))) sms-12.c:23 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg/v:SI 244 [ a ])
        (expr_list:REG_DEAD (reg:SI 231)
            (expr_list:REG_EQUAL (eq:SI (reg/v:SI 244 [ a ])
                    (const_int 601 [0x259]))
                (nil)))))
(jump_insn 85 84 86 6 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) sms-12.c:23 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 89)
(note 86 85 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 87 86 88 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>) [0 __builtin_abort S4 A32])
                (const_int 0 [0]))
            (use (reg:SI 154 fpscr0))
            (use (reg:SI 12 r12))
            (clobber (reg:SI 146 pr))
            (clobber (scratch:SI))
        ]) sms-12.c:24 317 {call_pcrel}
     (expr_list:REG_DEAD (reg:SI 154 fpscr0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("abort") [flags 0x41]  <function_decl 0x14269c1b0 abort>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 88 87 89)
(code_label 89 88 90 8 3 "" [1 uses])
(note 90 89 93 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 93 90 94 8 (clobber (reg/i:SI 0 r0)) sms-12.c:26 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 r0)
        (nil)))
(insn 94 93 92 8 (clobber (reg:SI 215 [ <retval> ])) sms-12.c:26 -1
     (nil))
(insn 92 94 95 8 (set (reg/i:SI 0 r0)
        (reg:SI 215 [ <retval> ])) sms-12.c:26 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 215 [ <retval> ])
        (nil)))
(insn 95 92 419 8 (use (reg/i:SI 0 r0)) sms-12.c:26 -1
     (nil))
(code_label 419 95 291 9 27 "" [1 uses])
(note 291 419 289 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 289 291 290 9 (set (reg:SI 147 t)
        (eq:SI (reg:SI 235)
            (const_int 0 [0]))) 12 {cmpeqsi_t}
     (nil))
(jump_insn 290 289 272 9 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 79)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 1250 (nil)))
 -> 79)
(note 272 290 270 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 270 272 271 10 (set (reg:SI 147 t)
        (eq:SI (reg:SI 235)
            (const_int 1 [0x1]))) 12 {cmpeqsi_t}
     (nil))
(jump_insn 271 270 252 10 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 420)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 1428 (nil)))
 -> 420)
(note 252 271 250 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 250 252 251 11 (set (reg:SI 147 t)
        (eq:SI (reg:SI 235)
            (const_int 2 [0x2]))) 12 {cmpeqsi_t}
     (nil))
(jump_insn 251 250 232 11 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 421)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 1666 (nil)))
 -> 421)
(note 232 251 230 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 230 232 231 12 (set (reg:SI 147 t)
        (eq:SI (reg:SI 235)
            (const_int 3 [0x3]))) 12 {cmpeqsi_t}
     (nil))
(jump_insn 231 230 212 12 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 422)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 422)
(note 212 231 210 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 210 212 211 13 (set (reg:SI 147 t)
        (eq:SI (reg:SI 235)
            (const_int 4 [0x4]))) 12 {cmpeqsi_t}
     (nil))
(jump_insn 211 210 192 13 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 423)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 2500 (nil)))
 -> 423)
(note 192 211 190 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 190 192 191 14 (set (reg:SI 147 t)
        (eq:SI (reg:SI 235)
            (const_int 5 [0x5]))) 12 {cmpeqsi_t}
     (nil))
(jump_insn 191 190 172 14 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 424)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 3333 (nil)))
 -> 424)
(note 172 191 170 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 170 172 171 15 (set (reg:SI 147 t)
        (eq:SI (reg:SI 235)
            (const_int 6 [0x6]))) 12 {cmpeqsi_t}
     (expr_list:REG_DEAD (reg:SI 235)
        (nil)))
(jump_insn 171 170 163 15 (set (pc)
        (if_then_else (ne (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 425)
            (pc))) 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 425)
(note 163 171 154 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 154 163 155 16 (set (reg:SI 292 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 155 154 156 16 (set (reg:SI 293 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 156 155 157 16 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 292 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 293 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 293 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 292 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 157 156 158 16 (set (reg:SI 294 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 158 157 425 16 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 294 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 294 [ D.1499 ])
        (nil)))
(code_label 425 158 183 17 33 "" [1 uses])
(note 183 425 174 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 174 183 175 17 (set (reg:SI 295 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 175 174 176 17 (set (reg:SI 296 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 176 175 177 17 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 295 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 296 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 296 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 295 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 177 176 178 17 (set (reg:SI 297 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 178 177 424 17 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 297 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 297 [ D.1499 ])
        (nil)))
(code_label 424 178 203 18 32 "" [1 uses])
(note 203 424 194 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 194 203 195 18 (set (reg:SI 298 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 195 194 196 18 (set (reg:SI 299 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 196 195 197 18 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 298 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 299 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 299 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 298 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 197 196 198 18 (set (reg:SI 300 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 198 197 423 18 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 300 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 300 [ D.1499 ])
        (nil)))
(code_label 423 198 223 19 31 "" [1 uses])
(note 223 423 214 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 214 223 215 19 (set (reg:SI 301 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 215 214 216 19 (set (reg:SI 302 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 216 215 217 19 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 301 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 302 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 302 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 301 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 217 216 218 19 (set (reg:SI 303 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 218 217 422 19 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 303 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 303 [ D.1499 ])
        (nil)))
(code_label 422 218 243 20 30 "" [1 uses])
(note 243 422 234 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 234 243 235 20 (set (reg:SI 304 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 235 234 236 20 (set (reg:SI 305 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 236 235 237 20 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 304 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 305 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 305 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 304 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 237 236 238 20 (set (reg:SI 306 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 238 237 421 20 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 306 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 306 [ D.1499 ])
        (nil)))
(code_label 421 238 263 21 29 "" [1 uses])
(note 263 421 254 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 254 263 255 21 (set (reg:SI 307 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 255 254 256 21 (set (reg:SI 308 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 256 255 257 21 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 307 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 308 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 308 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 307 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 257 256 258 21 (set (reg:SI 309 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 258 257 420 21 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 309 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 309 [ D.1499 ])
        (nil)))
(code_label 420 258 283 22 28 "" [1 uses])
(note 283 420 274 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 274 283 275 22 (set (reg:SI 310 [ MEM[base: _20, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 245 [ ivtmp.9 ])) [1 MEM[base: _20, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 245 [ ivtmp.9 ])
        (nil)))
(insn 275 274 276 22 (set (reg:SI 311 [ MEM[base: _21, offset: 0B] ])
        (mem:SI (post_inc:SI (reg:SI 246 [ ivtmp.11 ])) [1 MEM[base: _21, offset: 0B]+0 S4 A32])) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_INC (reg:SI 246 [ ivtmp.11 ])
        (nil)))
(insn 276 275 277 22 (set (reg:SI 149 macl)
        (mult:SI (reg:SI 310 [ MEM[base: _20, offset: 0B] ])
            (reg:SI 311 [ MEM[base: _21, offset: 0B] ]))) sms-12.c:21 108 {mul_l}
     (expr_list:REG_DEAD (reg:SI 311 [ MEM[base: _21, offset: 0B] ])
        (expr_list:REG_DEAD (reg:SI 310 [ MEM[base: _20, offset: 0B] ])
            (nil))))
(insn 277 276 278 22 (set (reg:SI 312 [ D.1499 ])
        (reg:SI 149 macl)) sms-12.c:21 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 149 macl)
        (nil)))
(insn 278 277 281 22 (set (reg/v:SI 244 [ a ])
        (plus:SI (reg/v:SI 244 [ a ])
            (reg:SI 312 [ D.1499 ]))) sms-12.c:21 66 {*addsi3}
     (expr_list:REG_DEAD (reg:SI 312 [ D.1499 ])
        (nil)))
(insn 281 278 282 22 (set (reg:SI 147 t)
        (eq:SI (reg:SI 245 [ ivtmp.9 ])
            (reg/f:SI 214 [ D.1501 ]))) sms-12.c:20 12 {cmpeqsi_t}
     (expr_list:REG_EQUAL (eq:SI (reg:SI 245 [ ivtmp.9 ])
            (const:SI (plus:SI (symbol_ref:SI ("X")  <var_decl 0x14260b630 X>)
                    (const_int 4000 [0xfa0]))))
        (nil)))
(jump_insn 282 281 1181 22 (set (pc)
        (if_then_else (eq (reg:SI 147 t)
                (const_int 0 [0]))
            (label_ref:SI 79)
            (pc))) sms-12.c:20 299 {*cbranch_t}
     (expr_list:REG_DEAD (reg:SI 147 t)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 79)
(note 1181 282 1182 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1182 1181 1183 23 (set (pc)
        (label_ref 1162)) -1
     (nil)
 -> 1162)
(barrier 1183 1182 0)

;; Function main (main, funcdef_no=1, decl_uid=1468, cgraph_uid=1, symbol_order=3) (executed once)



try_optimize_cfg iteration 1

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Reordered sequence:
 2 bb 2  [10000]
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 16 [] 17 [] 18 [] 19 [] 20 [] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 60 [] 61 [] 62 [] 63 [] 64 [fr0] 65 [fr1] 66 [fr2] 67 [fr3] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 80 [] 81 [] 82 [] 83 [] 84 [] 85 [] 86 [] 87 [] 88 [] 89 [] 90 [] 91 [] 92 [] 93 [] 94 [] 95 [] 96 [] 97 [] 98 [] 99 [] 128 [] 129 [] 130 [] 131 [] 132 [] 136 [] 137 [] 138 [] 139 [] 140 [] 141 [] 146 [pr] 147 [t] 148 [mach] 149 [macl] 150 [fpul] 151 [] 152 [rap]
;;  hardware regs used 	 12 [r12] 15 [r15] 145 [ap] 153 [sfp]
;;  regular block artificial uses 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  eh block artificial uses 	 12 [r12] 14 [r14] 15 [r15] 145 [ap] 153 [sfp]
;;  entry block defs 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [r12] 14 [r14] 15 [r15] 68 [fr4] 69 [fr5] 70 [fr6] 71 [fr7] 72 [fr8] 73 [fr9] 74 [fr10] 75 [fr11] 145 [ap] 146 [pr] 153 [sfp]
;;  exit block uses 	 0 [r0] 12 [r12] 14 [r14] 15 [r15] 151 [] 153 [sfp]
;;  regs ever live 	 0[r0] 4[r4] 5[r5] 12[r12] 15[r15] 146[pr] 154[fpscr0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d} r3={2d} r4={3d,1u} r5={3d,1u} r6={2d} r7={2d} r12={1d,5u} r14={1d,2u} r15={1d,3u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r128={1d} r129={1d} r130={1d} r131={1d} r132={1d} r136={1d} r137={1d} r138={1d} r139={1d} r140={1d} r141={1d} r145={1d,1u} r146={2d} r147={1d} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,2u} r154={1u} r163={1d,6u} r164={1d,1u} r166={1d,2u} r167={1d,6u} r168={1d,1u} r174={1d,2u} r182={1d,2u} r190={1d,2u} r198={1d,2u} r206={1d,2u} 
;;    total ref usage 160{115d,45u,0e} in 27{26 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 164)
        (const:SI (unspec [
                    (symbol_ref:SI ("Y")  <var_decl 0x14260b6c0 Y>)
                ] UNSPEC_GOT))) sms-12.c:31 255 {movsi_ie}
     (nil))
(note 6 5 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg/f:SI 163)
        (mem/u/c:SI (plus:SI (reg/f:SI 164)
                (reg:SI 12 r12)) [0  S4 A32])) sms-12.c:31 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 164)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 166)
        (const_int 2 [0x2])) sms-12.c:31 255 {movsi_ie}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 163)
                (const_int 4 [0x4])) [1 Y+4 S4 A32])
        (reg:SI 166)) sms-12.c:31 255 {movsi_ie}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 168)
        (const:SI (unspec [
                    (symbol_ref:SI ("X")  <var_decl 0x14260b630 X>)
                ] UNSPEC_GOT))) sms-12.c:31 255 {movsi_ie}
     (nil))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 14 2 (set (reg/f:SI 167)
        (mem/u/c:SI (plus:SI (reg/f:SI 168)
                (reg:SI 12 r12)) [0  S4 A32])) sms-12.c:31 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 168)
        (nil)))
(insn 14 12 18 2 (set (mem/c:SI (reg/f:SI 167) [1 X+0 S4 A32])
        (reg:SI 166)) sms-12.c:31 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 18 14 19 2 (set (reg:SI 174)
        (const_int 21 [0x15])) sms-12.c:32 255 {movsi_ie}
     (nil))
(insn 19 18 24 2 (set (mem/c:SI (plus:SI (reg/f:SI 167)
                (const_int 4 [0x4])) [1 X+4 S4 A32])
        (reg:SI 174)) sms-12.c:32 255 {movsi_ie}
     (nil))
(insn 24 19 28 2 (set (mem/c:SI (reg/f:SI 163) [1 Y+0 S4 A32])
        (reg:SI 174)) sms-12.c:32 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 28 24 29 2 (set (reg:SI 182)
        (const_int 3 [0x3])) sms-12.c:33 255 {movsi_ie}
     (nil))
(insn 29 28 34 2 (set (mem/c:SI (plus:SI (reg/f:SI 163)
                (const_int 12 [0xc])) [1 Y+12 S4 A32])
        (reg:SI 182)) sms-12.c:33 255 {movsi_ie}
     (nil))
(insn 34 29 38 2 (set (mem/c:SI (plus:SI (reg/f:SI 167)
                (const_int 8 [0x8])) [1 X+8 S4 A32])
        (reg:SI 182)) sms-12.c:33 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 182)
        (nil)))
(insn 38 34 39 2 (set (reg:SI 190)
        (const_int 31 [0x1f])) sms-12.c:34 255 {movsi_ie}
     (nil))
(insn 39 38 44 2 (set (mem/c:SI (plus:SI (reg/f:SI 167)
                (const_int 12 [0xc])) [1 X+12 S4 A32])
        (reg:SI 190)) sms-12.c:34 255 {movsi_ie}
     (nil))
(insn 44 39 48 2 (set (mem/c:SI (plus:SI (reg/f:SI 163)
                (const_int 8 [0x8])) [1 Y+8 S4 A32])
        (reg:SI 190)) sms-12.c:34 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
(insn 48 44 49 2 (set (reg:SI 198)
        (const_int 4 [0x4])) sms-12.c:35 255 {movsi_ie}
     (nil))
(insn 49 48 54 2 (set (mem/c:SI (plus:SI (reg/f:SI 163)
                (const_int 20 [0x14])) [1 Y+20 S4 A32])
        (reg:SI 198)) sms-12.c:35 255 {movsi_ie}
     (nil))
(insn 54 49 58 2 (set (mem/c:SI (plus:SI (reg/f:SI 167)
                (const_int 16 [0x10])) [1 X+16 S4 A32])
        (reg:SI 198)) sms-12.c:35 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 198)
        (nil)))
(insn 58 54 59 2 (set (reg:SI 206)
        (const_int 41 [0x29])) sms-12.c:36 255 {movsi_ie}
     (nil))
(insn 59 58 64 2 (set (mem/c:SI (plus:SI (reg/f:SI 167)
                (const_int 20 [0x14])) [1 X+20 S4 A32])
        (reg:SI 206)) sms-12.c:36 255 {movsi_ie}
     (expr_list:REG_DEAD (reg/f:SI 167)
        (nil)))
(insn 64 59 65 2 (set (mem/c:SI (plus:SI (reg/f:SI 163)
                (const_int 16 [0x10])) [1 Y+16 S4 A32])
        (reg:SI 206)) sms-12.c:36 255 {movsi_ie}
     (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg/f:SI 163)
            (nil))))
(insn 65 64 66 2 (set (reg:SI 5 r5)
        (const_int 3 [0x3])) sms-12.c:38 255 {movsi_ie}
     (nil))
(insn 66 65 67 2 (set (reg:SI 4 r4)
        (const_int 6 [0x6])) sms-12.c:38 255 {movsi_ie}
     (nil))
(call_insn 67 66 72 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("foo") [flags 0x1]  <function_decl 0x1426e9948 foo>) [0 foo S4 A32])
                    (const_int 0 [0])))
            (use (reg:SI 154 fpscr0))
            (use (reg:SI 12 r12))
            (clobber (reg:SI 146 pr))
            (clobber (scratch:SI))
        ]) sms-12.c:38 324 {call_value_pcrel}
     (expr_list:REG_DEAD (reg:SI 154 fpscr0)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("foo") [flags 0x1]  <function_decl 0x1426e9948 foo>)
                        (nil))))))
    (expr_list:SI (use (reg:SI 4 r4))
        (expr_list:SI (use (reg:SI 5 r5))
            (nil))))
(insn 72 67 73 2 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) sms-12.c:40 255 {movsi_ie}
     (nil))
(insn 73 72 0 2 (use (reg/i:SI 0 r0)) sms-12.c:40 -1
     (nil))
