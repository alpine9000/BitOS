
;; Function check (check, funcdef_no=0, decl_uid=1458, cgraph_uid=0, symbol_order=2)

beginning to process the following SWITCH statement (cswtch.c:14) : ------- 
switch (param_5(D)) <default: <L5>, case -2: <L8>, case 1 ... 2: <L1>, case 3: <L3>, case 6: <L4>>

Removing basic block 6
Removing basic block 5
Removing basic block 4
Removing basic block 3
Removing basic block 10
Switch converted
--------------------------------

Symbols to be put in SSA form
{ D.1486 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 11
Number of blocks to update: 5 ( 45%)


check (int param)
{
  int b;
  int a;
  unsigned int _3;
  unsigned int _4;

  <bb 2>:
  _4 = (unsigned int) param_5(D);
  _3 = _4 + 2;
  if (_3 <= 8)
    goto <bb 9> (<L10>);
  else
    goto <bb 8> (<L9>);

<L9>:
  a_8 = 16;
  b_9 = 1;
  goto <bb 7> (<L11>);

<L10>:
  a_6 = CSWTCH.3[_3];
  b_7 = CSWTCH.4[_3];

  # a_1 = PHI <a_8(8), a_6(9)>
  # b_2 = PHI <b_9(8), b_7(9)>
<L11>:
<L8>:
  X = a_1;
  Y = b_2;
  return 0;

}



;; Function assertions (assertions, funcdef_no=1, decl_uid=1471, cgraph_uid=1, symbol_order=3)

assertions (int a, int b)
{
  int X.0_2;
  int Y.1_4;

  <bb 2>:
  X.0_2 = X;
  if (X.0_2 != a_3(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  Y.1_4 = Y;
  if (Y.1_4 != b_5(D))
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  abort ();

  <bb 5>:
  return;

}



;; Function main (main, funcdef_no=2, decl_uid=1473, cgraph_uid=2, symbol_order=4)

main ()
{
  int a;
  int b;
  int D.1572;
  int a;
  int b;
  int D.1562;
  int a;
  int b;
  int D.1552;
  int a;
  int b;
  int D.1542;
  int a;
  int b;
  int D.1532;
  int a;
  int b;
  int D.1522;
  int a;
  int b;
  int D.1512;
  int a;
  int b;
  int D.1502;

  <bb 2>:
  X = 16;
  Y = 1;
  X = 0;
  Y = -1;
  X = 8;
  Y = 6;
  X = 9;
  Y = 5;
  X = 16;
  Y = 1;
  X = 10;
  Y = 4;
  X = 16;
  Y = 1;
  return 0;

}


