
;; Function test (test, funcdef_no=0, decl_uid=1456, cgraph_uid=0, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Rank for _4 is 7
Rank for _3 is 7
Rank for _10 is 7
Optimizing range tests a_2(D) -[10, 10] and -[26, 26]
 into (a_2(D) & -17) != 10
Width = 1 was chosen for reassociation
Transforming _9 = _5 | _10;
 into _9 = _4 | _12;
Width = 1 was chosen for reassociation
test (int a, int b, int c)
{
  int _1;
  _Bool _3;
  _Bool _4;
  _Bool _9;
  _Bool _10;
  int _11;
  _Bool _12;

  <bb 2>:
  _11 = a_2(D) & -17;
  _12 = _11 == 10;
  _3 = a_2(D) == 10;
  _4 = a_2(D) == 12;
  _10 = a_2(D) == 26;
  _9 = _4 | _12;
  if (_9 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # _1 = PHI <b_7(D)(2), c_6(D)(3)>
  return _1;

}



;; Function main (main, funcdef_no=1, decl_uid=1458, cgraph_uid=1, symbol_order=1) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 10 }
;; 9 succs { }
;; 10 succs { 1 }
main ()
{
  int _2;
  int _3;
  int _4;
  int _5;

  <bb 2>:
  _2 = test (10, 20, 30);
  if (_2 != 20)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __builtin_abort ();

  <bb 4>:
  _3 = test (12, 20, 30);
  if (_3 != 20)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __builtin_abort ();

  <bb 6>:
  _4 = test (26, 20, 30);
  if (_4 != 20)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __builtin_abort ();

  <bb 8>:
  _5 = test (30, 20, 30);
  if (_5 != 30)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __builtin_abort ();

  <bb 10>:
  return 0;

}


